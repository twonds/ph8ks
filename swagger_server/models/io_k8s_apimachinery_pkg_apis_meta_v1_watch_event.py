# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1WatchEvent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, object: IoK8sApimachineryPkgRuntimeRawExtension=None, type: str=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1WatchEvent - a model defined in Swagger

        :param object: The object of this IoK8sApimachineryPkgApisMetaV1WatchEvent.  # noqa: E501
        :type object: IoK8sApimachineryPkgRuntimeRawExtension
        :param type: The type of this IoK8sApimachineryPkgApisMetaV1WatchEvent.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'object': IoK8sApimachineryPkgRuntimeRawExtension,
            'type': str
        }

        self.attribute_map = {
            'object': 'object',
            'type': 'type'
        }

        self._object = object
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1WatchEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent of this IoK8sApimachineryPkgApisMetaV1WatchEvent.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1WatchEvent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self) -> IoK8sApimachineryPkgRuntimeRawExtension:
        """Gets the object of this IoK8sApimachineryPkgApisMetaV1WatchEvent.

        Object is:  * If Type is Added or Modified: the new state of the object.  * If Type is Deleted: the state of the object immediately before deletion.  * If Type is Error: *Status is recommended; other types may make sense    depending on context.  # noqa: E501

        :return: The object of this IoK8sApimachineryPkgApisMetaV1WatchEvent.
        :rtype: IoK8sApimachineryPkgRuntimeRawExtension
        """
        return self._object

    @object.setter
    def object(self, object: IoK8sApimachineryPkgRuntimeRawExtension):
        """Sets the object of this IoK8sApimachineryPkgApisMetaV1WatchEvent.

        Object is:  * If Type is Added or Modified: the new state of the object.  * If Type is Deleted: the state of the object immediately before deletion.  * If Type is Error: *Status is recommended; other types may make sense    depending on context.  # noqa: E501

        :param object: The object of this IoK8sApimachineryPkgApisMetaV1WatchEvent.
        :type object: IoK8sApimachineryPkgRuntimeRawExtension
        """
        if object is None:
            raise ValueError("Invalid value for `object`, must not be `None`")  # noqa: E501

        self._object = object

    @property
    def type(self) -> str:
        """Gets the type of this IoK8sApimachineryPkgApisMetaV1WatchEvent.


        :return: The type of this IoK8sApimachineryPkgApisMetaV1WatchEvent.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this IoK8sApimachineryPkgApisMetaV1WatchEvent.


        :param type: The type of this IoK8sApimachineryPkgApisMetaV1WatchEvent.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type
