# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1VolumeProjection(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, config_map: IoK8sApiCoreV1ConfigMapProjection=None, downward_api: IoK8sApiCoreV1DownwardAPIProjection=None, secret: IoK8sApiCoreV1SecretProjection=None, service_account_token: IoK8sApiCoreV1ServiceAccountTokenProjection=None):  # noqa: E501
        """IoK8sApiCoreV1VolumeProjection - a model defined in Swagger

        :param config_map: The config_map of this IoK8sApiCoreV1VolumeProjection.  # noqa: E501
        :type config_map: IoK8sApiCoreV1ConfigMapProjection
        :param downward_api: The downward_api of this IoK8sApiCoreV1VolumeProjection.  # noqa: E501
        :type downward_api: IoK8sApiCoreV1DownwardAPIProjection
        :param secret: The secret of this IoK8sApiCoreV1VolumeProjection.  # noqa: E501
        :type secret: IoK8sApiCoreV1SecretProjection
        :param service_account_token: The service_account_token of this IoK8sApiCoreV1VolumeProjection.  # noqa: E501
        :type service_account_token: IoK8sApiCoreV1ServiceAccountTokenProjection
        """
        self.swagger_types = {
            'config_map': IoK8sApiCoreV1ConfigMapProjection,
            'downward_api': IoK8sApiCoreV1DownwardAPIProjection,
            'secret': IoK8sApiCoreV1SecretProjection,
            'service_account_token': IoK8sApiCoreV1ServiceAccountTokenProjection
        }

        self.attribute_map = {
            'config_map': 'configMap',
            'downward_api': 'downwardAPI',
            'secret': 'secret',
            'service_account_token': 'serviceAccountToken'
        }

        self._config_map = config_map
        self._downward_api = downward_api
        self._secret = secret
        self._service_account_token = service_account_token

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1VolumeProjection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.VolumeProjection of this IoK8sApiCoreV1VolumeProjection.  # noqa: E501
        :rtype: IoK8sApiCoreV1VolumeProjection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_map(self) -> IoK8sApiCoreV1ConfigMapProjection:
        """Gets the config_map of this IoK8sApiCoreV1VolumeProjection.

        information about the configMap data to project  # noqa: E501

        :return: The config_map of this IoK8sApiCoreV1VolumeProjection.
        :rtype: IoK8sApiCoreV1ConfigMapProjection
        """
        return self._config_map

    @config_map.setter
    def config_map(self, config_map: IoK8sApiCoreV1ConfigMapProjection):
        """Sets the config_map of this IoK8sApiCoreV1VolumeProjection.

        information about the configMap data to project  # noqa: E501

        :param config_map: The config_map of this IoK8sApiCoreV1VolumeProjection.
        :type config_map: IoK8sApiCoreV1ConfigMapProjection
        """

        self._config_map = config_map

    @property
    def downward_api(self) -> IoK8sApiCoreV1DownwardAPIProjection:
        """Gets the downward_api of this IoK8sApiCoreV1VolumeProjection.

        information about the downwardAPI data to project  # noqa: E501

        :return: The downward_api of this IoK8sApiCoreV1VolumeProjection.
        :rtype: IoK8sApiCoreV1DownwardAPIProjection
        """
        return self._downward_api

    @downward_api.setter
    def downward_api(self, downward_api: IoK8sApiCoreV1DownwardAPIProjection):
        """Sets the downward_api of this IoK8sApiCoreV1VolumeProjection.

        information about the downwardAPI data to project  # noqa: E501

        :param downward_api: The downward_api of this IoK8sApiCoreV1VolumeProjection.
        :type downward_api: IoK8sApiCoreV1DownwardAPIProjection
        """

        self._downward_api = downward_api

    @property
    def secret(self) -> IoK8sApiCoreV1SecretProjection:
        """Gets the secret of this IoK8sApiCoreV1VolumeProjection.

        information about the secret data to project  # noqa: E501

        :return: The secret of this IoK8sApiCoreV1VolumeProjection.
        :rtype: IoK8sApiCoreV1SecretProjection
        """
        return self._secret

    @secret.setter
    def secret(self, secret: IoK8sApiCoreV1SecretProjection):
        """Sets the secret of this IoK8sApiCoreV1VolumeProjection.

        information about the secret data to project  # noqa: E501

        :param secret: The secret of this IoK8sApiCoreV1VolumeProjection.
        :type secret: IoK8sApiCoreV1SecretProjection
        """

        self._secret = secret

    @property
    def service_account_token(self) -> IoK8sApiCoreV1ServiceAccountTokenProjection:
        """Gets the service_account_token of this IoK8sApiCoreV1VolumeProjection.

        information about the serviceAccountToken data to project  # noqa: E501

        :return: The service_account_token of this IoK8sApiCoreV1VolumeProjection.
        :rtype: IoK8sApiCoreV1ServiceAccountTokenProjection
        """
        return self._service_account_token

    @service_account_token.setter
    def service_account_token(self, service_account_token: IoK8sApiCoreV1ServiceAccountTokenProjection):
        """Sets the service_account_token of this IoK8sApiCoreV1VolumeProjection.

        information about the serviceAccountToken data to project  # noqa: E501

        :param service_account_token: The service_account_token of this IoK8sApiCoreV1VolumeProjection.
        :type service_account_token: IoK8sApiCoreV1ServiceAccountTokenProjection
        """

        self._service_account_token = service_account_token
