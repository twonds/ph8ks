# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAuthorizationV1beta1NonResourceRule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, non_resource_ur_ls: List[str]=None, verbs: List[str]=None):  # noqa: E501
        """IoK8sApiAuthorizationV1beta1NonResourceRule - a model defined in Swagger

        :param non_resource_ur_ls: The non_resource_ur_ls of this IoK8sApiAuthorizationV1beta1NonResourceRule.  # noqa: E501
        :type non_resource_ur_ls: List[str]
        :param verbs: The verbs of this IoK8sApiAuthorizationV1beta1NonResourceRule.  # noqa: E501
        :type verbs: List[str]
        """
        self.swagger_types = {
            'non_resource_ur_ls': List[str],
            'verbs': List[str]
        }

        self.attribute_map = {
            'non_resource_ur_ls': 'nonResourceURLs',
            'verbs': 'verbs'
        }

        self._non_resource_ur_ls = non_resource_ur_ls
        self._verbs = verbs

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAuthorizationV1beta1NonResourceRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.authorization.v1beta1.NonResourceRule of this IoK8sApiAuthorizationV1beta1NonResourceRule.  # noqa: E501
        :rtype: IoK8sApiAuthorizationV1beta1NonResourceRule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def non_resource_ur_ls(self) -> List[str]:
        """Gets the non_resource_ur_ls of this IoK8sApiAuthorizationV1beta1NonResourceRule.

        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all.  # noqa: E501

        :return: The non_resource_ur_ls of this IoK8sApiAuthorizationV1beta1NonResourceRule.
        :rtype: List[str]
        """
        return self._non_resource_ur_ls

    @non_resource_ur_ls.setter
    def non_resource_ur_ls(self, non_resource_ur_ls: List[str]):
        """Sets the non_resource_ur_ls of this IoK8sApiAuthorizationV1beta1NonResourceRule.

        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all.  # noqa: E501

        :param non_resource_ur_ls: The non_resource_ur_ls of this IoK8sApiAuthorizationV1beta1NonResourceRule.
        :type non_resource_ur_ls: List[str]
        """

        self._non_resource_ur_ls = non_resource_ur_ls

    @property
    def verbs(self) -> List[str]:
        """Gets the verbs of this IoK8sApiAuthorizationV1beta1NonResourceRule.

        Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all.  # noqa: E501

        :return: The verbs of this IoK8sApiAuthorizationV1beta1NonResourceRule.
        :rtype: List[str]
        """
        return self._verbs

    @verbs.setter
    def verbs(self, verbs: List[str]):
        """Sets the verbs of this IoK8sApiAuthorizationV1beta1NonResourceRule.

        Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all.  # noqa: E501

        :param verbs: The verbs of this IoK8sApiAuthorizationV1beta1NonResourceRule.
        :type verbs: List[str]
        """
        if verbs is None:
            raise ValueError("Invalid value for `verbs`, must not be `None`")  # noqa: E501

        self._verbs = verbs
