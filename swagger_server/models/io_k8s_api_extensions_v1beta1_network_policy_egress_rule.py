# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ports: List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]=None, to: List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]=None):  # noqa: E501
        """IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule - a model defined in Swagger

        :param ports: The ports of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.  # noqa: E501
        :type ports: List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]
        :param to: The to of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.  # noqa: E501
        :type to: List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]
        """
        self.swagger_types = {
            'ports': List[IoK8sApiExtensionsV1beta1NetworkPolicyPort],
            'to': List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]
        }

        self.attribute_map = {
            'ports': 'ports',
            'to': 'to'
        }

        self._ports = ports
        self._to = to

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.extensions.v1beta1.NetworkPolicyEgressRule of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.  # noqa: E501
        :rtype: IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ports(self) -> List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]:
        """Gets the ports of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.

        List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.  # noqa: E501

        :return: The ports of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.
        :rtype: List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]
        """
        return self._ports

    @ports.setter
    def ports(self, ports: List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]):
        """Sets the ports of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.

        List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.  # noqa: E501

        :param ports: The ports of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.
        :type ports: List[IoK8sApiExtensionsV1beta1NetworkPolicyPort]
        """

        self._ports = ports

    @property
    def to(self) -> List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]:
        """Gets the to of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.

        List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.  # noqa: E501

        :return: The to of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.
        :rtype: List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]
        """
        return self._to

    @to.setter
    def to(self, to: List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]):
        """Sets the to of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.

        List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.  # noqa: E501

        :param to: The to of this IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule.
        :type to: List[IoK8sApiExtensionsV1beta1NetworkPolicyPeer]
        """

        self._to = to
