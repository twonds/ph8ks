# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ref: str=None, schema: str=None, additional_items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool=None, additional_properties: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool=None, all_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, any_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, default: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON=None, definitions: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, dependencies: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]=None, description: str=None, enum: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]=None, example: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON=None, exclusive_maximum: bool=None, exclusive_minimum: bool=None, external_docs: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation=None, format: str=None, id: str=None, items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray=None, max_items: int=None, max_length: int=None, max_properties: int=None, maximum: float=None, min_items: int=None, min_length: int=None, min_properties: int=None, minimum: float=None, multiple_of: float=None, _not: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps=None, nullable: bool=None, one_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, pattern: str=None, pattern_properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]=None, required: List[str]=None, title: str=None, type: str=None, unique_items: bool=None, x_kubernetes_embedded_resource: bool=None, x_kubernetes_int_or_string: bool=None, x_kubernetes_list_map_keys: List[str]=None, x_kubernetes_list_type: str=None, x_kubernetes_map_type: str=None, x_kubernetes_preserve_unknown_fields: bool=None):  # noqa: E501
        """IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps - a model defined in Swagger

        :param ref: The ref of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type ref: str
        :param schema: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type schema: str
        :param additional_items: The additional_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type additional_items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        :param additional_properties: The additional_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type additional_properties: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        :param all_of: The all_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type all_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param any_of: The any_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type any_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param default: The default of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type default: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        :param definitions: The definitions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type definitions: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param dependencies: The dependencies of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type dependencies: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]
        :param description: The description of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type description: str
        :param enum: The enum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type enum: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]
        :param example: The example of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type example: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        :param exclusive_maximum: The exclusive_maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type exclusive_maximum: bool
        :param exclusive_minimum: The exclusive_minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type exclusive_minimum: bool
        :param external_docs: The external_docs of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type external_docs: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation
        :param format: The format of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type format: str
        :param id: The id of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type id: str
        :param items: The items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray
        :param max_items: The max_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type max_items: int
        :param max_length: The max_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type max_length: int
        :param max_properties: The max_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type max_properties: int
        :param maximum: The maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type maximum: float
        :param min_items: The min_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type min_items: int
        :param min_length: The min_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type min_length: int
        :param min_properties: The min_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type min_properties: int
        :param minimum: The minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type minimum: float
        :param multiple_of: The multiple_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type multiple_of: float
        :param _not: The _not of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type _not: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps
        :param nullable: The nullable of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type nullable: bool
        :param one_of: The one_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type one_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param pattern: The pattern of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type pattern: str
        :param pattern_properties: The pattern_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type pattern_properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param properties: The properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        :param required: The required of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type required: List[str]
        :param title: The title of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type title: str
        :param type: The type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type type: str
        :param unique_items: The unique_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type unique_items: bool
        :param x_kubernetes_embedded_resource: The x_kubernetes_embedded_resource of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_embedded_resource: bool
        :param x_kubernetes_int_or_string: The x_kubernetes_int_or_string of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_int_or_string: bool
        :param x_kubernetes_list_map_keys: The x_kubernetes_list_map_keys of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_list_map_keys: List[str]
        :param x_kubernetes_list_type: The x_kubernetes_list_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_list_type: str
        :param x_kubernetes_map_type: The x_kubernetes_map_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_map_type: str
        :param x_kubernetes_preserve_unknown_fields: The x_kubernetes_preserve_unknown_fields of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :type x_kubernetes_preserve_unknown_fields: bool
        """
        self.swagger_types = {
            'ref': str,
            'schema': str,
            'additional_items': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool,
            'additional_properties': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool,
            'all_of': List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'any_of': List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'default': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON,
            'definitions': Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'dependencies': Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray],
            'description': str,
            'enum': List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON],
            'example': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON,
            'exclusive_maximum': bool,
            'exclusive_minimum': bool,
            'external_docs': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation,
            'format': str,
            'id': str,
            'items': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray,
            'max_items': int,
            'max_length': int,
            'max_properties': int,
            'maximum': float,
            'min_items': int,
            'min_length': int,
            'min_properties': int,
            'minimum': float,
            'multiple_of': float,
            '_not': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps,
            'nullable': bool,
            'one_of': List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'pattern': str,
            'pattern_properties': Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'properties': Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps],
            'required': List[str],
            'title': str,
            'type': str,
            'unique_items': bool,
            'x_kubernetes_embedded_resource': bool,
            'x_kubernetes_int_or_string': bool,
            'x_kubernetes_list_map_keys': List[str],
            'x_kubernetes_list_type': str,
            'x_kubernetes_map_type': str,
            'x_kubernetes_preserve_unknown_fields': bool
        }

        self.attribute_map = {
            'ref': '$ref',
            'schema': '$schema',
            'additional_items': 'additionalItems',
            'additional_properties': 'additionalProperties',
            'all_of': 'allOf',
            'any_of': 'anyOf',
            'default': 'default',
            'definitions': 'definitions',
            'dependencies': 'dependencies',
            'description': 'description',
            'enum': 'enum',
            'example': 'example',
            'exclusive_maximum': 'exclusiveMaximum',
            'exclusive_minimum': 'exclusiveMinimum',
            'external_docs': 'externalDocs',
            'format': 'format',
            'id': 'id',
            'items': 'items',
            'max_items': 'maxItems',
            'max_length': 'maxLength',
            'max_properties': 'maxProperties',
            'maximum': 'maximum',
            'min_items': 'minItems',
            'min_length': 'minLength',
            'min_properties': 'minProperties',
            'minimum': 'minimum',
            'multiple_of': 'multipleOf',
            '_not': 'not',
            'nullable': 'nullable',
            'one_of': 'oneOf',
            'pattern': 'pattern',
            'pattern_properties': 'patternProperties',
            'properties': 'properties',
            'required': 'required',
            'title': 'title',
            'type': 'type',
            'unique_items': 'uniqueItems',
            'x_kubernetes_embedded_resource': 'x-kubernetes-embedded-resource',
            'x_kubernetes_int_or_string': 'x-kubernetes-int-or-string',
            'x_kubernetes_list_map_keys': 'x-kubernetes-list-map-keys',
            'x_kubernetes_list_type': 'x-kubernetes-list-type',
            'x_kubernetes_map_type': 'x-kubernetes-map-type',
            'x_kubernetes_preserve_unknown_fields': 'x-kubernetes-preserve-unknown-fields'
        }

        self._ref = ref
        self._schema = schema
        self._additional_items = additional_items
        self._additional_properties = additional_properties
        self._all_of = all_of
        self._any_of = any_of
        self._default = default
        self._definitions = definitions
        self._dependencies = dependencies
        self._description = description
        self._enum = enum
        self._example = example
        self._exclusive_maximum = exclusive_maximum
        self._exclusive_minimum = exclusive_minimum
        self._external_docs = external_docs
        self._format = format
        self._id = id
        self._items = items
        self._max_items = max_items
        self._max_length = max_length
        self._max_properties = max_properties
        self._maximum = maximum
        self._min_items = min_items
        self._min_length = min_length
        self._min_properties = min_properties
        self._minimum = minimum
        self._multiple_of = multiple_of
        self.__not = _not
        self._nullable = nullable
        self._one_of = one_of
        self._pattern = pattern
        self._pattern_properties = pattern_properties
        self._properties = properties
        self._required = required
        self._title = title
        self._type = type
        self._unique_items = unique_items
        self._x_kubernetes_embedded_resource = x_kubernetes_embedded_resource
        self._x_kubernetes_int_or_string = x_kubernetes_int_or_string
        self._x_kubernetes_list_map_keys = x_kubernetes_list_map_keys
        self._x_kubernetes_list_type = x_kubernetes_list_type
        self._x_kubernetes_map_type = x_kubernetes_map_type
        self._x_kubernetes_preserve_unknown_fields = x_kubernetes_preserve_unknown_fields

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.  # noqa: E501
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref(self) -> str:
        """Gets the ref of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The ref of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref: str):
        """Sets the ref of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param ref: The ref of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type ref: str
        """

        self._ref = ref

    @property
    def schema(self) -> str:
        """Gets the schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._schema

    @schema.setter
    def schema(self, schema: str):
        """Sets the schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param schema: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type schema: str
        """

        self._schema = schema

    @property
    def additional_items(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool:
        """Gets the additional_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The additional_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        """
        return self._additional_items

    @additional_items.setter
    def additional_items(self, additional_items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool):
        """Sets the additional_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param additional_items: The additional_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type additional_items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        """

        self._additional_items = additional_items

    @property
    def additional_properties(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool:
        """Gets the additional_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The additional_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        """
        return self._additional_properties

    @additional_properties.setter
    def additional_properties(self, additional_properties: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool):
        """Sets the additional_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param additional_properties: The additional_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type additional_properties: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrBool
        """

        self._additional_properties = additional_properties

    @property
    def all_of(self) -> List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the all_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The all_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._all_of

    @all_of.setter
    def all_of(self, all_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the all_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param all_of: The all_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type all_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._all_of = all_of

    @property
    def any_of(self) -> List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the any_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The any_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._any_of

    @any_of.setter
    def any_of(self, any_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the any_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param any_of: The any_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type any_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._any_of = any_of

    @property
    def default(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON:
        """Gets the default of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.  # noqa: E501

        :return: The default of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        """
        return self._default

    @default.setter
    def default(self, default: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON):
        """Sets the default of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.  # noqa: E501

        :param default: The default of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type default: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        """

        self._default = default

    @property
    def definitions(self) -> Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the definitions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The definitions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._definitions

    @definitions.setter
    def definitions(self, definitions: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the definitions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param definitions: The definitions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type definitions: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._definitions = definitions

    @property
    def dependencies(self) -> Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]:
        """Gets the dependencies of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The dependencies of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]
        """
        return self._dependencies

    @dependencies.setter
    def dependencies(self, dependencies: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]):
        """Sets the dependencies of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param dependencies: The dependencies of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type dependencies: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrStringArray]
        """

        self._dependencies = dependencies

    @property
    def description(self) -> str:
        """Gets the description of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The description of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param description: The description of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type description: str
        """

        self._description = description

    @property
    def enum(self) -> List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]:
        """Gets the enum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The enum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]
        """
        return self._enum

    @enum.setter
    def enum(self, enum: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]):
        """Sets the enum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param enum: The enum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type enum: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON]
        """

        self._enum = enum

    @property
    def example(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON:
        """Gets the example of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The example of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        """
        return self._example

    @example.setter
    def example(self, example: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON):
        """Sets the example of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param example: The example of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type example: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSON
        """

        self._example = example

    @property
    def exclusive_maximum(self) -> bool:
        """Gets the exclusive_maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The exclusive_maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._exclusive_maximum

    @exclusive_maximum.setter
    def exclusive_maximum(self, exclusive_maximum: bool):
        """Sets the exclusive_maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param exclusive_maximum: The exclusive_maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type exclusive_maximum: bool
        """

        self._exclusive_maximum = exclusive_maximum

    @property
    def exclusive_minimum(self) -> bool:
        """Gets the exclusive_minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The exclusive_minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._exclusive_minimum

    @exclusive_minimum.setter
    def exclusive_minimum(self, exclusive_minimum: bool):
        """Sets the exclusive_minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param exclusive_minimum: The exclusive_minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type exclusive_minimum: bool
        """

        self._exclusive_minimum = exclusive_minimum

    @property
    def external_docs(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation:
        """Gets the external_docs of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The external_docs of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation
        """
        return self._external_docs

    @external_docs.setter
    def external_docs(self, external_docs: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation):
        """Sets the external_docs of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param external_docs: The external_docs of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type external_docs: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1ExternalDocumentation
        """

        self._external_docs = external_docs

    @property
    def format(self) -> str:
        """Gets the format of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:  - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.  # noqa: E501

        :return: The format of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format: str):
        """Sets the format of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:  - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.  # noqa: E501

        :param format: The format of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type format: str
        """

        self._format = format

    @property
    def id(self) -> str:
        """Gets the id of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The id of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param id: The id of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type id: str
        """

        self._id = id

    @property
    def items(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray:
        """Gets the items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray
        """
        return self._items

    @items.setter
    def items(self, items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray):
        """Sets the items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param items: The items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type items: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaPropsOrArray
        """

        self._items = items

    @property
    def max_items(self) -> int:
        """Gets the max_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The max_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items: int):
        """Sets the max_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param max_items: The max_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type max_items: int
        """

        self._max_items = max_items

    @property
    def max_length(self) -> int:
        """Gets the max_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The max_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length: int):
        """Sets the max_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param max_length: The max_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type max_length: int
        """

        self._max_length = max_length

    @property
    def max_properties(self) -> int:
        """Gets the max_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The max_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._max_properties

    @max_properties.setter
    def max_properties(self, max_properties: int):
        """Sets the max_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param max_properties: The max_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type max_properties: int
        """

        self._max_properties = max_properties

    @property
    def maximum(self) -> float:
        """Gets the maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum: float):
        """Sets the maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param maximum: The maximum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def min_items(self) -> int:
        """Gets the min_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The min_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._min_items

    @min_items.setter
    def min_items(self, min_items: int):
        """Sets the min_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param min_items: The min_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type min_items: int
        """

        self._min_items = min_items

    @property
    def min_length(self) -> int:
        """Gets the min_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The min_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._min_length

    @min_length.setter
    def min_length(self, min_length: int):
        """Sets the min_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param min_length: The min_length of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type min_length: int
        """

        self._min_length = min_length

    @property
    def min_properties(self) -> int:
        """Gets the min_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The min_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: int
        """
        return self._min_properties

    @min_properties.setter
    def min_properties(self, min_properties: int):
        """Sets the min_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param min_properties: The min_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type min_properties: int
        """

        self._min_properties = min_properties

    @property
    def minimum(self) -> float:
        """Gets the minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum: float):
        """Sets the minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param minimum: The minimum of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type minimum: float
        """

        self._minimum = minimum

    @property
    def multiple_of(self) -> float:
        """Gets the multiple_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The multiple_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: float
        """
        return self._multiple_of

    @multiple_of.setter
    def multiple_of(self, multiple_of: float):
        """Sets the multiple_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param multiple_of: The multiple_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type multiple_of: float
        """

        self._multiple_of = multiple_of

    @property
    def _not(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps:
        """Gets the _not of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The _not of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps
        """
        return self.__not

    @_not.setter
    def _not(self, _not: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps):
        """Sets the _not of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param _not: The _not of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type _not: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps
        """

        self.__not = _not

    @property
    def nullable(self) -> bool:
        """Gets the nullable of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The nullable of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._nullable

    @nullable.setter
    def nullable(self, nullable: bool):
        """Sets the nullable of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param nullable: The nullable of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type nullable: bool
        """

        self._nullable = nullable

    @property
    def one_of(self) -> List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the one_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The one_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._one_of

    @one_of.setter
    def one_of(self, one_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the one_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param one_of: The one_of of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type one_of: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._one_of = one_of

    @property
    def pattern(self) -> str:
        """Gets the pattern of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The pattern of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._pattern

    @pattern.setter
    def pattern(self, pattern: str):
        """Sets the pattern of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param pattern: The pattern of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type pattern: str
        """

        self._pattern = pattern

    @property
    def pattern_properties(self) -> Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the pattern_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The pattern_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._pattern_properties

    @pattern_properties.setter
    def pattern_properties(self, pattern_properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the pattern_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param pattern_properties: The pattern_properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type pattern_properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._pattern_properties = pattern_properties

    @property
    def properties(self) -> Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]:
        """Gets the properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """
        return self._properties

    @properties.setter
    def properties(self, properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]):
        """Sets the properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param properties: The properties of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type properties: Dict[str, IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps]
        """

        self._properties = properties

    @property
    def required(self) -> List[str]:
        """Gets the required of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The required of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[str]
        """
        return self._required

    @required.setter
    def required(self, required: List[str]):
        """Sets the required of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param required: The required of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type required: List[str]
        """

        self._required = required

    @property
    def title(self) -> str:
        """Gets the title of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The title of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param title: The title of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type title: str
        """

        self._title = title

    @property
    def type(self) -> str:
        """Gets the type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param type: The type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type type: str
        """

        self._type = type

    @property
    def unique_items(self) -> bool:
        """Gets the unique_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :return: The unique_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._unique_items

    @unique_items.setter
    def unique_items(self, unique_items: bool):
        """Sets the unique_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.


        :param unique_items: The unique_items of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type unique_items: bool
        """

        self._unique_items = unique_items

    @property
    def x_kubernetes_embedded_resource(self) -> bool:
        """Gets the x_kubernetes_embedded_resource of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).  # noqa: E501

        :return: The x_kubernetes_embedded_resource of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._x_kubernetes_embedded_resource

    @x_kubernetes_embedded_resource.setter
    def x_kubernetes_embedded_resource(self, x_kubernetes_embedded_resource: bool):
        """Sets the x_kubernetes_embedded_resource of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).  # noqa: E501

        :param x_kubernetes_embedded_resource: The x_kubernetes_embedded_resource of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_embedded_resource: bool
        """

        self._x_kubernetes_embedded_resource = x_kubernetes_embedded_resource

    @property
    def x_kubernetes_int_or_string(self) -> bool:
        """Gets the x_kubernetes_int_or_string of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:  1) anyOf:    - type: integer    - type: string 2) allOf:    - anyOf:      - type: integer      - type: string    - ... zero or more  # noqa: E501

        :return: The x_kubernetes_int_or_string of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._x_kubernetes_int_or_string

    @x_kubernetes_int_or_string.setter
    def x_kubernetes_int_or_string(self, x_kubernetes_int_or_string: bool):
        """Sets the x_kubernetes_int_or_string of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:  1) anyOf:    - type: integer    - type: string 2) allOf:    - anyOf:      - type: integer      - type: string    - ... zero or more  # noqa: E501

        :param x_kubernetes_int_or_string: The x_kubernetes_int_or_string of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_int_or_string: bool
        """

        self._x_kubernetes_int_or_string = x_kubernetes_int_or_string

    @property
    def x_kubernetes_list_map_keys(self) -> List[str]:
        """Gets the x_kubernetes_list_map_keys of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.  This tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).  # noqa: E501

        :return: The x_kubernetes_list_map_keys of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: List[str]
        """
        return self._x_kubernetes_list_map_keys

    @x_kubernetes_list_map_keys.setter
    def x_kubernetes_list_map_keys(self, x_kubernetes_list_map_keys: List[str]):
        """Sets the x_kubernetes_list_map_keys of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.  This tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).  # noqa: E501

        :param x_kubernetes_list_map_keys: The x_kubernetes_list_map_keys of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_list_map_keys: List[str]
        """

        self._x_kubernetes_list_map_keys = x_kubernetes_list_map_keys

    @property
    def x_kubernetes_list_type(self) -> str:
        """Gets the x_kubernetes_list_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:  1) `atomic`: the list is treated as a single entity, like a scalar.      Atomic lists will be entirely replaced when updated. This extension      may be used on any type of list (struct, scalar, ...). 2) `set`:      Sets are lists that must not have multiple items with the same value. Each      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an      array with x-kubernetes-list-type `atomic`. 3) `map`:      These lists are like maps in that their elements have a non-index key      used to identify them. Order is preserved upon merge. The map tag      must only be used on a list with elements of type object. Defaults to atomic for arrays.  # noqa: E501

        :return: The x_kubernetes_list_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._x_kubernetes_list_type

    @x_kubernetes_list_type.setter
    def x_kubernetes_list_type(self, x_kubernetes_list_type: str):
        """Sets the x_kubernetes_list_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:  1) `atomic`: the list is treated as a single entity, like a scalar.      Atomic lists will be entirely replaced when updated. This extension      may be used on any type of list (struct, scalar, ...). 2) `set`:      Sets are lists that must not have multiple items with the same value. Each      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an      array with x-kubernetes-list-type `atomic`. 3) `map`:      These lists are like maps in that their elements have a non-index key      used to identify them. Order is preserved upon merge. The map tag      must only be used on a list with elements of type object. Defaults to atomic for arrays.  # noqa: E501

        :param x_kubernetes_list_type: The x_kubernetes_list_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_list_type: str
        """

        self._x_kubernetes_list_type = x_kubernetes_list_type

    @property
    def x_kubernetes_map_type(self) -> str:
        """Gets the x_kubernetes_map_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:  1) `granular`:      These maps are actual maps (key-value pairs) and each fields are independent      from each other (they can each be manipulated by separate actors). This is      the default behaviour for all maps. 2) `atomic`: the list is treated as a single entity, like a scalar.      Atomic maps will be entirely replaced when updated.  # noqa: E501

        :return: The x_kubernetes_map_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: str
        """
        return self._x_kubernetes_map_type

    @x_kubernetes_map_type.setter
    def x_kubernetes_map_type(self, x_kubernetes_map_type: str):
        """Sets the x_kubernetes_map_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:  1) `granular`:      These maps are actual maps (key-value pairs) and each fields are independent      from each other (they can each be manipulated by separate actors). This is      the default behaviour for all maps. 2) `atomic`: the list is treated as a single entity, like a scalar.      Atomic maps will be entirely replaced when updated.  # noqa: E501

        :param x_kubernetes_map_type: The x_kubernetes_map_type of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_map_type: str
        """

        self._x_kubernetes_map_type = x_kubernetes_map_type

    @property
    def x_kubernetes_preserve_unknown_fields(self) -> bool:
        """Gets the x_kubernetes_preserve_unknown_fields of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.  # noqa: E501

        :return: The x_kubernetes_preserve_unknown_fields of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :rtype: bool
        """
        return self._x_kubernetes_preserve_unknown_fields

    @x_kubernetes_preserve_unknown_fields.setter
    def x_kubernetes_preserve_unknown_fields(self, x_kubernetes_preserve_unknown_fields: bool):
        """Sets the x_kubernetes_preserve_unknown_fields of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.

        x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.  # noqa: E501

        :param x_kubernetes_preserve_unknown_fields: The x_kubernetes_preserve_unknown_fields of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1JSONSchemaProps.
        :type x_kubernetes_preserve_unknown_fields: bool
        """

        self._x_kubernetes_preserve_unknown_fields = x_kubernetes_preserve_unknown_fields
