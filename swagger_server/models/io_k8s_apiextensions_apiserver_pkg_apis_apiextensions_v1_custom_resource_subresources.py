# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, scale: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale=None, status: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus=None):  # noqa: E501
        """IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources - a model defined in Swagger

        :param scale: The scale of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.  # noqa: E501
        :type scale: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale
        :param status: The status of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.  # noqa: E501
        :type status: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus
        """
        self.swagger_types = {
            'scale': IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale,
            'status': IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus
        }

        self.attribute_map = {
            'scale': 'scale',
            'status': 'status'
        }

        self._scale = scale
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.  # noqa: E501
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scale(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale:
        """Gets the scale of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.

        scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.  # noqa: E501

        :return: The scale of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale
        """
        return self._scale

    @scale.setter
    def scale(self, scale: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale):
        """Sets the scale of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.

        scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.  # noqa: E501

        :param scale: The scale of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.
        :type scale: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale
        """

        self._scale = scale

    @property
    def status(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus:
        """Gets the status of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.

        status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.  # noqa: E501

        :return: The status of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus
        """
        return self._status

    @status.setter
    def status(self, status: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus):
        """Sets the status of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.

        status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.  # noqa: E501

        :param status: The status of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources.
        :type status: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus
        """

        self._status = status
