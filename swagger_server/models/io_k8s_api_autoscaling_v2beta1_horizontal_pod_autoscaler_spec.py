# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, max_replicas: int=None, metrics: List[IoK8sApiAutoscalingV2beta1MetricSpec]=None, min_replicas: int=None, scale_target_ref: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference=None):  # noqa: E501
        """IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec - a model defined in Swagger

        :param max_replicas: The max_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type max_replicas: int
        :param metrics: The metrics of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type metrics: List[IoK8sApiAutoscalingV2beta1MetricSpec]
        :param min_replicas: The min_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type min_replicas: int
        :param scale_target_ref: The scale_target_ref of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type scale_target_ref: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        """
        self.swagger_types = {
            'max_replicas': int,
            'metrics': List[IoK8sApiAutoscalingV2beta1MetricSpec],
            'min_replicas': int,
            'scale_target_ref': IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        }

        self.attribute_map = {
            'max_replicas': 'maxReplicas',
            'metrics': 'metrics',
            'min_replicas': 'minReplicas',
            'scale_target_ref': 'scaleTargetRef'
        }

        self._max_replicas = max_replicas
        self._metrics = metrics
        self._min_replicas = min_replicas
        self._scale_target_ref = scale_target_ref

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_replicas(self) -> int:
        """Gets the max_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.  # noqa: E501

        :return: The max_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :rtype: int
        """
        return self._max_replicas

    @max_replicas.setter
    def max_replicas(self, max_replicas: int):
        """Sets the max_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.  # noqa: E501

        :param max_replicas: The max_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :type max_replicas: int
        """
        if max_replicas is None:
            raise ValueError("Invalid value for `max_replicas`, must not be `None`")  # noqa: E501

        self._max_replicas = max_replicas

    @property
    def metrics(self) -> List[IoK8sApiAutoscalingV2beta1MetricSpec]:
        """Gets the metrics of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.  # noqa: E501

        :return: The metrics of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :rtype: List[IoK8sApiAutoscalingV2beta1MetricSpec]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics: List[IoK8sApiAutoscalingV2beta1MetricSpec]):
        """Sets the metrics of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.  # noqa: E501

        :param metrics: The metrics of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :type metrics: List[IoK8sApiAutoscalingV2beta1MetricSpec]
        """

        self._metrics = metrics

    @property
    def min_replicas(self) -> int:
        """Gets the min_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.  # noqa: E501

        :return: The min_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :rtype: int
        """
        return self._min_replicas

    @min_replicas.setter
    def min_replicas(self, min_replicas: int):
        """Sets the min_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.  # noqa: E501

        :param min_replicas: The min_replicas of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :type min_replicas: int
        """

        self._min_replicas = min_replicas

    @property
    def scale_target_ref(self) -> IoK8sApiAutoscalingV2beta1CrossVersionObjectReference:
        """Gets the scale_target_ref of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.  # noqa: E501

        :return: The scale_target_ref of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :rtype: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        """
        return self._scale_target_ref

    @scale_target_ref.setter
    def scale_target_ref(self, scale_target_ref: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference):
        """Sets the scale_target_ref of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.

        scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.  # noqa: E501

        :param scale_target_ref: The scale_target_ref of this IoK8sApiAutoscalingV2beta1HorizontalPodAutoscalerSpec.
        :type scale_target_ref: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        """
        if scale_target_ref is None:
            raise ValueError("Invalid value for `scale_target_ref`, must not be `None`")  # noqa: E501

        self._scale_target_ref = scale_target_ref
