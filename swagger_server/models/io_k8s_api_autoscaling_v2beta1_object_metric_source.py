# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAutoscalingV2beta1ObjectMetricSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, average_value: IoK8sApimachineryPkgApiResourceQuantity=None, metric_name: str=None, selector: IoK8sApimachineryPkgApisMetaV1LabelSelector=None, target: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference=None, target_value: IoK8sApimachineryPkgApiResourceQuantity=None):  # noqa: E501
        """IoK8sApiAutoscalingV2beta1ObjectMetricSource - a model defined in Swagger

        :param average_value: The average_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :type average_value: IoK8sApimachineryPkgApiResourceQuantity
        :param metric_name: The metric_name of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :type metric_name: str
        :param selector: The selector of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :type selector: IoK8sApimachineryPkgApisMetaV1LabelSelector
        :param target: The target of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :type target: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        :param target_value: The target_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :type target_value: IoK8sApimachineryPkgApiResourceQuantity
        """
        self.swagger_types = {
            'average_value': IoK8sApimachineryPkgApiResourceQuantity,
            'metric_name': str,
            'selector': IoK8sApimachineryPkgApisMetaV1LabelSelector,
            'target': IoK8sApiAutoscalingV2beta1CrossVersionObjectReference,
            'target_value': IoK8sApimachineryPkgApiResourceQuantity
        }

        self.attribute_map = {
            'average_value': 'averageValue',
            'metric_name': 'metricName',
            'selector': 'selector',
            'target': 'target',
            'target_value': 'targetValue'
        }

        self._average_value = average_value
        self._metric_name = metric_name
        self._selector = selector
        self._target = target
        self._target_value = target_value

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAutoscalingV2beta1ObjectMetricSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.autoscaling.v2beta1.ObjectMetricSource of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2beta1ObjectMetricSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_value(self) -> IoK8sApimachineryPkgApiResourceQuantity:
        """Gets the average_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        averageValue is the target value of the average of the metric across all relevant pods (as a quantity)  # noqa: E501

        :return: The average_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :rtype: IoK8sApimachineryPkgApiResourceQuantity
        """
        return self._average_value

    @average_value.setter
    def average_value(self, average_value: IoK8sApimachineryPkgApiResourceQuantity):
        """Sets the average_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        averageValue is the target value of the average of the metric across all relevant pods (as a quantity)  # noqa: E501

        :param average_value: The average_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :type average_value: IoK8sApimachineryPkgApiResourceQuantity
        """

        self._average_value = average_value

    @property
    def metric_name(self) -> str:
        """Gets the metric_name of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        metricName is the name of the metric in question.  # noqa: E501

        :return: The metric_name of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name: str):
        """Sets the metric_name of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        metricName is the name of the metric in question.  # noqa: E501

        :param metric_name: The metric_name of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :type metric_name: str
        """
        if metric_name is None:
            raise ValueError("Invalid value for `metric_name`, must not be `None`")  # noqa: E501

        self._metric_name = metric_name

    @property
    def selector(self) -> IoK8sApimachineryPkgApisMetaV1LabelSelector:
        """Gets the selector of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.  # noqa: E501

        :return: The selector of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :rtype: IoK8sApimachineryPkgApisMetaV1LabelSelector
        """
        return self._selector

    @selector.setter
    def selector(self, selector: IoK8sApimachineryPkgApisMetaV1LabelSelector):
        """Sets the selector of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.  # noqa: E501

        :param selector: The selector of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :type selector: IoK8sApimachineryPkgApisMetaV1LabelSelector
        """

        self._selector = selector

    @property
    def target(self) -> IoK8sApiAutoscalingV2beta1CrossVersionObjectReference:
        """Gets the target of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        target is the described Kubernetes object.  # noqa: E501

        :return: The target of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :rtype: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        """
        return self._target

    @target.setter
    def target(self, target: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference):
        """Sets the target of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        target is the described Kubernetes object.  # noqa: E501

        :param target: The target of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :type target: IoK8sApiAutoscalingV2beta1CrossVersionObjectReference
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")  # noqa: E501

        self._target = target

    @property
    def target_value(self) -> IoK8sApimachineryPkgApiResourceQuantity:
        """Gets the target_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        targetValue is the target value of the metric (as a quantity).  # noqa: E501

        :return: The target_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :rtype: IoK8sApimachineryPkgApiResourceQuantity
        """
        return self._target_value

    @target_value.setter
    def target_value(self, target_value: IoK8sApimachineryPkgApiResourceQuantity):
        """Sets the target_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.

        targetValue is the target value of the metric (as a quantity).  # noqa: E501

        :param target_value: The target_value of this IoK8sApiAutoscalingV2beta1ObjectMetricSource.
        :type target_value: IoK8sApimachineryPkgApiResourceQuantity
        """
        if target_value is None:
            raise ValueError("Invalid value for `target_value`, must not be `None`")  # noqa: E501

        self._target_value = target_value
