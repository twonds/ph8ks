# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiPolicyV1beta1FSGroupStrategyOptions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ranges: List[IoK8sApiPolicyV1beta1IDRange]=None, rule: str=None):  # noqa: E501
        """IoK8sApiPolicyV1beta1FSGroupStrategyOptions - a model defined in Swagger

        :param ranges: The ranges of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.  # noqa: E501
        :type ranges: List[IoK8sApiPolicyV1beta1IDRange]
        :param rule: The rule of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.  # noqa: E501
        :type rule: str
        """
        self.swagger_types = {
            'ranges': List[IoK8sApiPolicyV1beta1IDRange],
            'rule': str
        }

        self.attribute_map = {
            'ranges': 'ranges',
            'rule': 'rule'
        }

        self._ranges = ranges
        self._rule = rule

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiPolicyV1beta1FSGroupStrategyOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.policy.v1beta1.FSGroupStrategyOptions of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.  # noqa: E501
        :rtype: IoK8sApiPolicyV1beta1FSGroupStrategyOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ranges(self) -> List[IoK8sApiPolicyV1beta1IDRange]:
        """Gets the ranges of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.

        ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.  # noqa: E501

        :return: The ranges of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.
        :rtype: List[IoK8sApiPolicyV1beta1IDRange]
        """
        return self._ranges

    @ranges.setter
    def ranges(self, ranges: List[IoK8sApiPolicyV1beta1IDRange]):
        """Sets the ranges of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.

        ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.  # noqa: E501

        :param ranges: The ranges of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.
        :type ranges: List[IoK8sApiPolicyV1beta1IDRange]
        """

        self._ranges = ranges

    @property
    def rule(self) -> str:
        """Gets the rule of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.

        rule is the strategy that will dictate what FSGroup is used in the SecurityContext.  # noqa: E501

        :return: The rule of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.
        :rtype: str
        """
        return self._rule

    @rule.setter
    def rule(self, rule: str):
        """Sets the rule of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.

        rule is the strategy that will dictate what FSGroup is used in the SecurityContext.  # noqa: E501

        :param rule: The rule of this IoK8sApiPolicyV1beta1FSGroupStrategyOptions.
        :type rule: str
        """

        self._rule = rule
