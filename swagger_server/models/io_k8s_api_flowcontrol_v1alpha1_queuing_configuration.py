# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiFlowcontrolV1alpha1QueuingConfiguration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hand_size: int=None, queue_length_limit: int=None, queues: int=None):  # noqa: E501
        """IoK8sApiFlowcontrolV1alpha1QueuingConfiguration - a model defined in Swagger

        :param hand_size: The hand_size of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.  # noqa: E501
        :type hand_size: int
        :param queue_length_limit: The queue_length_limit of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.  # noqa: E501
        :type queue_length_limit: int
        :param queues: The queues of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.  # noqa: E501
        :type queues: int
        """
        self.swagger_types = {
            'hand_size': int,
            'queue_length_limit': int,
            'queues': int
        }

        self.attribute_map = {
            'hand_size': 'handSize',
            'queue_length_limit': 'queueLengthLimit',
            'queues': 'queues'
        }

        self._hand_size = hand_size
        self._queue_length_limit = queue_length_limit
        self._queues = queues

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiFlowcontrolV1alpha1QueuingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.flowcontrol.v1alpha1.QueuingConfiguration of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.  # noqa: E501
        :rtype: IoK8sApiFlowcontrolV1alpha1QueuingConfiguration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hand_size(self) -> int:
        """Gets the hand_size of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.  # noqa: E501

        :return: The hand_size of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :rtype: int
        """
        return self._hand_size

    @hand_size.setter
    def hand_size(self, hand_size: int):
        """Sets the hand_size of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.  # noqa: E501

        :param hand_size: The hand_size of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :type hand_size: int
        """

        self._hand_size = hand_size

    @property
    def queue_length_limit(self) -> int:
        """Gets the queue_length_limit of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.  # noqa: E501

        :return: The queue_length_limit of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :rtype: int
        """
        return self._queue_length_limit

    @queue_length_limit.setter
    def queue_length_limit(self, queue_length_limit: int):
        """Sets the queue_length_limit of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.  # noqa: E501

        :param queue_length_limit: The queue_length_limit of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :type queue_length_limit: int
        """

        self._queue_length_limit = queue_length_limit

    @property
    def queues(self) -> int:
        """Gets the queues of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.  # noqa: E501

        :return: The queues of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :rtype: int
        """
        return self._queues

    @queues.setter
    def queues(self, queues: int):
        """Sets the queues of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.

        `queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.  # noqa: E501

        :param queues: The queues of this IoK8sApiFlowcontrolV1alpha1QueuingConfiguration.
        :type queues: int
        """

        self._queues = queues
