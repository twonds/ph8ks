# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1LimitRangeSpec(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, limits: List[IoK8sApiCoreV1LimitRangeItem]=None):  # noqa: E501
        """IoK8sApiCoreV1LimitRangeSpec - a model defined in Swagger

        :param limits: The limits of this IoK8sApiCoreV1LimitRangeSpec.  # noqa: E501
        :type limits: List[IoK8sApiCoreV1LimitRangeItem]
        """
        self.swagger_types = {
            'limits': List[IoK8sApiCoreV1LimitRangeItem]
        }

        self.attribute_map = {
            'limits': 'limits'
        }

        self._limits = limits

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1LimitRangeSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.LimitRangeSpec of this IoK8sApiCoreV1LimitRangeSpec.  # noqa: E501
        :rtype: IoK8sApiCoreV1LimitRangeSpec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limits(self) -> List[IoK8sApiCoreV1LimitRangeItem]:
        """Gets the limits of this IoK8sApiCoreV1LimitRangeSpec.

        Limits is the list of LimitRangeItem objects that are enforced.  # noqa: E501

        :return: The limits of this IoK8sApiCoreV1LimitRangeSpec.
        :rtype: List[IoK8sApiCoreV1LimitRangeItem]
        """
        return self._limits

    @limits.setter
    def limits(self, limits: List[IoK8sApiCoreV1LimitRangeItem]):
        """Sets the limits of this IoK8sApiCoreV1LimitRangeSpec.

        Limits is the list of LimitRangeItem objects that are enforced.  # noqa: E501

        :param limits: The limits of this IoK8sApiCoreV1LimitRangeSpec.
        :type limits: List[IoK8sApiCoreV1LimitRangeItem]
        """
        if limits is None:
            raise ValueError("Invalid value for `limits`, must not be `None`")  # noqa: E501

        self._limits = limits
