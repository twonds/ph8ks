# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1EnvVarSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, config_map_key_ref: IoK8sApiCoreV1ConfigMapKeySelector=None, field_ref: IoK8sApiCoreV1ObjectFieldSelector=None, resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector=None, secret_key_ref: IoK8sApiCoreV1SecretKeySelector=None):  # noqa: E501
        """IoK8sApiCoreV1EnvVarSource - a model defined in Swagger

        :param config_map_key_ref: The config_map_key_ref of this IoK8sApiCoreV1EnvVarSource.  # noqa: E501
        :type config_map_key_ref: IoK8sApiCoreV1ConfigMapKeySelector
        :param field_ref: The field_ref of this IoK8sApiCoreV1EnvVarSource.  # noqa: E501
        :type field_ref: IoK8sApiCoreV1ObjectFieldSelector
        :param resource_field_ref: The resource_field_ref of this IoK8sApiCoreV1EnvVarSource.  # noqa: E501
        :type resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector
        :param secret_key_ref: The secret_key_ref of this IoK8sApiCoreV1EnvVarSource.  # noqa: E501
        :type secret_key_ref: IoK8sApiCoreV1SecretKeySelector
        """
        self.swagger_types = {
            'config_map_key_ref': IoK8sApiCoreV1ConfigMapKeySelector,
            'field_ref': IoK8sApiCoreV1ObjectFieldSelector,
            'resource_field_ref': IoK8sApiCoreV1ResourceFieldSelector,
            'secret_key_ref': IoK8sApiCoreV1SecretKeySelector
        }

        self.attribute_map = {
            'config_map_key_ref': 'configMapKeyRef',
            'field_ref': 'fieldRef',
            'resource_field_ref': 'resourceFieldRef',
            'secret_key_ref': 'secretKeyRef'
        }

        self._config_map_key_ref = config_map_key_ref
        self._field_ref = field_ref
        self._resource_field_ref = resource_field_ref
        self._secret_key_ref = secret_key_ref

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1EnvVarSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.EnvVarSource of this IoK8sApiCoreV1EnvVarSource.  # noqa: E501
        :rtype: IoK8sApiCoreV1EnvVarSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_map_key_ref(self) -> IoK8sApiCoreV1ConfigMapKeySelector:
        """Gets the config_map_key_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a key of a ConfigMap.  # noqa: E501

        :return: The config_map_key_ref of this IoK8sApiCoreV1EnvVarSource.
        :rtype: IoK8sApiCoreV1ConfigMapKeySelector
        """
        return self._config_map_key_ref

    @config_map_key_ref.setter
    def config_map_key_ref(self, config_map_key_ref: IoK8sApiCoreV1ConfigMapKeySelector):
        """Sets the config_map_key_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a key of a ConfigMap.  # noqa: E501

        :param config_map_key_ref: The config_map_key_ref of this IoK8sApiCoreV1EnvVarSource.
        :type config_map_key_ref: IoK8sApiCoreV1ConfigMapKeySelector
        """

        self._config_map_key_ref = config_map_key_ref

    @property
    def field_ref(self) -> IoK8sApiCoreV1ObjectFieldSelector:
        """Gets the field_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.  # noqa: E501

        :return: The field_ref of this IoK8sApiCoreV1EnvVarSource.
        :rtype: IoK8sApiCoreV1ObjectFieldSelector
        """
        return self._field_ref

    @field_ref.setter
    def field_ref(self, field_ref: IoK8sApiCoreV1ObjectFieldSelector):
        """Sets the field_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.  # noqa: E501

        :param field_ref: The field_ref of this IoK8sApiCoreV1EnvVarSource.
        :type field_ref: IoK8sApiCoreV1ObjectFieldSelector
        """

        self._field_ref = field_ref

    @property
    def resource_field_ref(self) -> IoK8sApiCoreV1ResourceFieldSelector:
        """Gets the resource_field_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.  # noqa: E501

        :return: The resource_field_ref of this IoK8sApiCoreV1EnvVarSource.
        :rtype: IoK8sApiCoreV1ResourceFieldSelector
        """
        return self._resource_field_ref

    @resource_field_ref.setter
    def resource_field_ref(self, resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector):
        """Sets the resource_field_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.  # noqa: E501

        :param resource_field_ref: The resource_field_ref of this IoK8sApiCoreV1EnvVarSource.
        :type resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector
        """

        self._resource_field_ref = resource_field_ref

    @property
    def secret_key_ref(self) -> IoK8sApiCoreV1SecretKeySelector:
        """Gets the secret_key_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a key of a secret in the pod's namespace  # noqa: E501

        :return: The secret_key_ref of this IoK8sApiCoreV1EnvVarSource.
        :rtype: IoK8sApiCoreV1SecretKeySelector
        """
        return self._secret_key_ref

    @secret_key_ref.setter
    def secret_key_ref(self, secret_key_ref: IoK8sApiCoreV1SecretKeySelector):
        """Sets the secret_key_ref of this IoK8sApiCoreV1EnvVarSource.

        Selects a key of a secret in the pod's namespace  # noqa: E501

        :param secret_key_ref: The secret_key_ref of this IoK8sApiCoreV1EnvVarSource.
        :type secret_key_ref: IoK8sApiCoreV1SecretKeySelector
        """

        self._secret_key_ref = secret_key_ref
