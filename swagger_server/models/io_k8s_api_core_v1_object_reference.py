# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1ObjectReference(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, field_path: str=None, kind: str=None, name: str=None, namespace: str=None, resource_version: str=None, uid: str=None):  # noqa: E501
        """IoK8sApiCoreV1ObjectReference - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type api_version: str
        :param field_path: The field_path of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type field_path: str
        :param kind: The kind of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type kind: str
        :param name: The name of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type name: str
        :param namespace: The namespace of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type namespace: str
        :param resource_version: The resource_version of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type resource_version: str
        :param uid: The uid of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :type uid: str
        """
        self.swagger_types = {
            'api_version': str,
            'field_path': str,
            'kind': str,
            'name': str,
            'namespace': str,
            'resource_version': str,
            'uid': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'field_path': 'fieldPath',
            'kind': 'kind',
            'name': 'name',
            'namespace': 'namespace',
            'resource_version': 'resourceVersion',
            'uid': 'uid'
        }

        self._api_version = api_version
        self._field_path = field_path
        self._kind = kind
        self._name = name
        self._namespace = namespace
        self._resource_version = resource_version
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1ObjectReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.ObjectReference of this IoK8sApiCoreV1ObjectReference.  # noqa: E501
        :rtype: IoK8sApiCoreV1ObjectReference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApiCoreV1ObjectReference.

        API version of the referent.  # noqa: E501

        :return: The api_version of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApiCoreV1ObjectReference.

        API version of the referent.  # noqa: E501

        :param api_version: The api_version of this IoK8sApiCoreV1ObjectReference.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def field_path(self) -> str:
        """Gets the field_path of this IoK8sApiCoreV1ObjectReference.

        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.  # noqa: E501

        :return: The field_path of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._field_path

    @field_path.setter
    def field_path(self, field_path: str):
        """Sets the field_path of this IoK8sApiCoreV1ObjectReference.

        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.  # noqa: E501

        :param field_path: The field_path of this IoK8sApiCoreV1ObjectReference.
        :type field_path: str
        """

        self._field_path = field_path

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApiCoreV1ObjectReference.

        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApiCoreV1ObjectReference.

        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiCoreV1ObjectReference.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApiCoreV1ObjectReference.

        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names  # noqa: E501

        :return: The name of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApiCoreV1ObjectReference.

        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names  # noqa: E501

        :param name: The name of this IoK8sApiCoreV1ObjectReference.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self) -> str:
        """Gets the namespace of this IoK8sApiCoreV1ObjectReference.

        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/  # noqa: E501

        :return: The namespace of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace: str):
        """Sets the namespace of this IoK8sApiCoreV1ObjectReference.

        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/  # noqa: E501

        :param namespace: The namespace of this IoK8sApiCoreV1ObjectReference.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def resource_version(self) -> str:
        """Gets the resource_version of this IoK8sApiCoreV1ObjectReference.

        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency  # noqa: E501

        :return: The resource_version of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._resource_version

    @resource_version.setter
    def resource_version(self, resource_version: str):
        """Sets the resource_version of this IoK8sApiCoreV1ObjectReference.

        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency  # noqa: E501

        :param resource_version: The resource_version of this IoK8sApiCoreV1ObjectReference.
        :type resource_version: str
        """

        self._resource_version = resource_version

    @property
    def uid(self) -> str:
        """Gets the uid of this IoK8sApiCoreV1ObjectReference.

        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids  # noqa: E501

        :return: The uid of this IoK8sApiCoreV1ObjectReference.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this IoK8sApiCoreV1ObjectReference.

        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids  # noqa: E501

        :param uid: The uid of this IoK8sApiCoreV1ObjectReference.
        :type uid: str
        """

        self._uid = uid
