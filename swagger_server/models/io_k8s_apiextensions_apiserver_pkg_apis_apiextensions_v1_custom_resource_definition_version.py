# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, additional_printer_columns: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]=None, name: str=None, schema: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation=None, served: bool=None, storage: bool=None, subresources: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources=None):  # noqa: E501
        """IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion - a model defined in Swagger

        :param additional_printer_columns: The additional_printer_columns of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type additional_printer_columns: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]
        :param name: The name of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type name: str
        :param schema: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type schema: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
        :param served: The served of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type served: bool
        :param storage: The storage of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type storage: bool
        :param subresources: The subresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :type subresources: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
        """
        self.swagger_types = {
            'additional_printer_columns': List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition],
            'name': str,
            'schema': IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation,
            'served': bool,
            'storage': bool,
            'subresources': IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
        }

        self.attribute_map = {
            'additional_printer_columns': 'additionalPrinterColumns',
            'name': 'name',
            'schema': 'schema',
            'served': 'served',
            'storage': 'storage',
            'subresources': 'subresources'
        }

        self._additional_printer_columns = additional_printer_columns
        self._name = name
        self._schema = schema
        self._served = served
        self._storage = storage
        self._subresources = subresources

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_printer_columns(self) -> List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]:
        """Gets the additional_printer_columns of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.  # noqa: E501

        :return: The additional_printer_columns of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]
        """
        return self._additional_printer_columns

    @additional_printer_columns.setter
    def additional_printer_columns(self, additional_printer_columns: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]):
        """Sets the additional_printer_columns of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.  # noqa: E501

        :param additional_printer_columns: The additional_printer_columns of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type additional_printer_columns: List[IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition]
        """

        self._additional_printer_columns = additional_printer_columns

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.  # noqa: E501

        :return: The name of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.  # noqa: E501

        :param name: The name of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def schema(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation:
        """Gets the schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.  # noqa: E501

        :return: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
        """
        return self._schema

    @schema.setter
    def schema(self, schema: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation):
        """Sets the schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.  # noqa: E501

        :param schema: The schema of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type schema: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
        """

        self._schema = schema

    @property
    def served(self) -> bool:
        """Gets the served of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        served is a flag enabling/disabling this version from being served via REST APIs  # noqa: E501

        :return: The served of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: bool
        """
        return self._served

    @served.setter
    def served(self, served: bool):
        """Sets the served of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        served is a flag enabling/disabling this version from being served via REST APIs  # noqa: E501

        :param served: The served of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type served: bool
        """
        if served is None:
            raise ValueError("Invalid value for `served`, must not be `None`")  # noqa: E501

        self._served = served

    @property
    def storage(self) -> bool:
        """Gets the storage of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.  # noqa: E501

        :return: The storage of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: bool
        """
        return self._storage

    @storage.setter
    def storage(self, storage: bool):
        """Sets the storage of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.  # noqa: E501

        :param storage: The storage of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type storage: bool
        """
        if storage is None:
            raise ValueError("Invalid value for `storage`, must not be `None`")  # noqa: E501

        self._storage = storage

    @property
    def subresources(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources:
        """Gets the subresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        subresources specify what subresources this version of the defined custom resource have.  # noqa: E501

        :return: The subresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
        """
        return self._subresources

    @subresources.setter
    def subresources(self, subresources: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources):
        """Sets the subresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.

        subresources specify what subresources this version of the defined custom resource have.  # noqa: E501

        :param subresources: The subresources of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion.
        :type subresources: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
        """

        self._subresources = subresources
