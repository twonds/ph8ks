# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1LimitRangeItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, default: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]=None, default_request: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]=None, max: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]=None, max_limit_request_ratio: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]=None, min: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]=None, type: str=None):  # noqa: E501
        """IoK8sApiCoreV1LimitRangeItem - a model defined in Swagger

        :param default: The default of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type default: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        :param default_request: The default_request of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type default_request: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        :param max: The max of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type max: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        :param max_limit_request_ratio: The max_limit_request_ratio of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type max_limit_request_ratio: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        :param min: The min of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type min: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        :param type: The type of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'default': Dict[str, IoK8sApimachineryPkgApiResourceQuantity],
            'default_request': Dict[str, IoK8sApimachineryPkgApiResourceQuantity],
            'max': Dict[str, IoK8sApimachineryPkgApiResourceQuantity],
            'max_limit_request_ratio': Dict[str, IoK8sApimachineryPkgApiResourceQuantity],
            'min': Dict[str, IoK8sApimachineryPkgApiResourceQuantity],
            'type': str
        }

        self.attribute_map = {
            'default': 'default',
            'default_request': 'defaultRequest',
            'max': 'max',
            'max_limit_request_ratio': 'maxLimitRequestRatio',
            'min': 'min',
            'type': 'type'
        }

        self._default = default
        self._default_request = default_request
        self._max = max
        self._max_limit_request_ratio = max_limit_request_ratio
        self._min = min
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1LimitRangeItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.LimitRangeItem of this IoK8sApiCoreV1LimitRangeItem.  # noqa: E501
        :rtype: IoK8sApiCoreV1LimitRangeItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self) -> Dict[str, IoK8sApimachineryPkgApiResourceQuantity]:
        """Gets the default of this IoK8sApiCoreV1LimitRangeItem.

        Default resource requirement limit value by resource name if resource limit is omitted.  # noqa: E501

        :return: The default of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """
        return self._default

    @default.setter
    def default(self, default: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]):
        """Sets the default of this IoK8sApiCoreV1LimitRangeItem.

        Default resource requirement limit value by resource name if resource limit is omitted.  # noqa: E501

        :param default: The default of this IoK8sApiCoreV1LimitRangeItem.
        :type default: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """

        self._default = default

    @property
    def default_request(self) -> Dict[str, IoK8sApimachineryPkgApiResourceQuantity]:
        """Gets the default_request of this IoK8sApiCoreV1LimitRangeItem.

        DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.  # noqa: E501

        :return: The default_request of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """
        return self._default_request

    @default_request.setter
    def default_request(self, default_request: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]):
        """Sets the default_request of this IoK8sApiCoreV1LimitRangeItem.

        DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.  # noqa: E501

        :param default_request: The default_request of this IoK8sApiCoreV1LimitRangeItem.
        :type default_request: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """

        self._default_request = default_request

    @property
    def max(self) -> Dict[str, IoK8sApimachineryPkgApiResourceQuantity]:
        """Gets the max of this IoK8sApiCoreV1LimitRangeItem.

        Max usage constraints on this kind by resource name.  # noqa: E501

        :return: The max of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """
        return self._max

    @max.setter
    def max(self, max: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]):
        """Sets the max of this IoK8sApiCoreV1LimitRangeItem.

        Max usage constraints on this kind by resource name.  # noqa: E501

        :param max: The max of this IoK8sApiCoreV1LimitRangeItem.
        :type max: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """

        self._max = max

    @property
    def max_limit_request_ratio(self) -> Dict[str, IoK8sApimachineryPkgApiResourceQuantity]:
        """Gets the max_limit_request_ratio of this IoK8sApiCoreV1LimitRangeItem.

        MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.  # noqa: E501

        :return: The max_limit_request_ratio of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """
        return self._max_limit_request_ratio

    @max_limit_request_ratio.setter
    def max_limit_request_ratio(self, max_limit_request_ratio: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]):
        """Sets the max_limit_request_ratio of this IoK8sApiCoreV1LimitRangeItem.

        MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.  # noqa: E501

        :param max_limit_request_ratio: The max_limit_request_ratio of this IoK8sApiCoreV1LimitRangeItem.
        :type max_limit_request_ratio: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """

        self._max_limit_request_ratio = max_limit_request_ratio

    @property
    def min(self) -> Dict[str, IoK8sApimachineryPkgApiResourceQuantity]:
        """Gets the min of this IoK8sApiCoreV1LimitRangeItem.

        Min usage constraints on this kind by resource name.  # noqa: E501

        :return: The min of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """
        return self._min

    @min.setter
    def min(self, min: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]):
        """Sets the min of this IoK8sApiCoreV1LimitRangeItem.

        Min usage constraints on this kind by resource name.  # noqa: E501

        :param min: The min of this IoK8sApiCoreV1LimitRangeItem.
        :type min: Dict[str, IoK8sApimachineryPkgApiResourceQuantity]
        """

        self._min = min

    @property
    def type(self) -> str:
        """Gets the type of this IoK8sApiCoreV1LimitRangeItem.

        Type of resource that this limit applies to.  # noqa: E501

        :return: The type of this IoK8sApiCoreV1LimitRangeItem.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this IoK8sApiCoreV1LimitRangeItem.

        Type of resource that this limit applies to.  # noqa: E501

        :param type: The type of this IoK8sApiCoreV1LimitRangeItem.
        :type type: str
        """

        self._type = type
