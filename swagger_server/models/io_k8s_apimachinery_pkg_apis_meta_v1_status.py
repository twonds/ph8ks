# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1Status(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, code: int=None, details: IoK8sApimachineryPkgApisMetaV1StatusDetails=None, kind: str=None, message: str=None, metadata: IoK8sApimachineryPkgApisMetaV1ListMeta=None, reason: str=None, status: str=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1Status - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type api_version: str
        :param code: The code of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type code: int
        :param details: The details of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type details: IoK8sApimachineryPkgApisMetaV1StatusDetails
        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type kind: str
        :param message: The message of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type message: str
        :param metadata: The metadata of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type metadata: IoK8sApimachineryPkgApisMetaV1ListMeta
        :param reason: The reason of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type reason: str
        :param status: The status of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'api_version': str,
            'code': int,
            'details': IoK8sApimachineryPkgApisMetaV1StatusDetails,
            'kind': str,
            'message': str,
            'metadata': IoK8sApimachineryPkgApisMetaV1ListMeta,
            'reason': str,
            'status': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'code': 'code',
            'details': 'details',
            'kind': 'kind',
            'message': 'message',
            'metadata': 'metadata',
            'reason': 'reason',
            'status': 'status'
        }

        self._api_version = api_version
        self._code = code
        self._details = details
        self._kind = kind
        self._message = message
        self._metadata = metadata
        self._reason = reason
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.Status of this IoK8sApimachineryPkgApisMetaV1Status.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApimachineryPkgApisMetaV1Status.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApimachineryPkgApisMetaV1Status.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1Status.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def code(self) -> int:
        """Gets the code of this IoK8sApimachineryPkgApisMetaV1Status.

        Suggested HTTP return code for this status, 0 if not set.  # noqa: E501

        :return: The code of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this IoK8sApimachineryPkgApisMetaV1Status.

        Suggested HTTP return code for this status, 0 if not set.  # noqa: E501

        :param code: The code of this IoK8sApimachineryPkgApisMetaV1Status.
        :type code: int
        """

        self._code = code

    @property
    def details(self) -> IoK8sApimachineryPkgApisMetaV1StatusDetails:
        """Gets the details of this IoK8sApimachineryPkgApisMetaV1Status.

        Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.  # noqa: E501

        :return: The details of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: IoK8sApimachineryPkgApisMetaV1StatusDetails
        """
        return self._details

    @details.setter
    def details(self, details: IoK8sApimachineryPkgApisMetaV1StatusDetails):
        """Sets the details of this IoK8sApimachineryPkgApisMetaV1Status.

        Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.  # noqa: E501

        :param details: The details of this IoK8sApimachineryPkgApisMetaV1Status.
        :type details: IoK8sApimachineryPkgApisMetaV1StatusDetails
        """

        self._details = details

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApimachineryPkgApisMetaV1Status.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApimachineryPkgApisMetaV1Status.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1Status.
        :type kind: str
        """

        self._kind = kind

    @property
    def message(self) -> str:
        """Gets the message of this IoK8sApimachineryPkgApisMetaV1Status.

        A human-readable description of the status of this operation.  # noqa: E501

        :return: The message of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this IoK8sApimachineryPkgApisMetaV1Status.

        A human-readable description of the status of this operation.  # noqa: E501

        :param message: The message of this IoK8sApimachineryPkgApisMetaV1Status.
        :type message: str
        """

        self._message = message

    @property
    def metadata(self) -> IoK8sApimachineryPkgApisMetaV1ListMeta:
        """Gets the metadata of this IoK8sApimachineryPkgApisMetaV1Status.

        Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The metadata of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: IoK8sApimachineryPkgApisMetaV1ListMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: IoK8sApimachineryPkgApisMetaV1ListMeta):
        """Sets the metadata of this IoK8sApimachineryPkgApisMetaV1Status.

        Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param metadata: The metadata of this IoK8sApimachineryPkgApisMetaV1Status.
        :type metadata: IoK8sApimachineryPkgApisMetaV1ListMeta
        """

        self._metadata = metadata

    @property
    def reason(self) -> str:
        """Gets the reason of this IoK8sApimachineryPkgApisMetaV1Status.

        A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.  # noqa: E501

        :return: The reason of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this IoK8sApimachineryPkgApisMetaV1Status.

        A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.  # noqa: E501

        :param reason: The reason of this IoK8sApimachineryPkgApisMetaV1Status.
        :type reason: str
        """

        self._reason = reason

    @property
    def status(self) -> str:
        """Gets the status of this IoK8sApimachineryPkgApisMetaV1Status.

        Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status  # noqa: E501

        :return: The status of this IoK8sApimachineryPkgApisMetaV1Status.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this IoK8sApimachineryPkgApisMetaV1Status.

        Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status  # noqa: E501

        :param status: The status of this IoK8sApimachineryPkgApisMetaV1Status.
        :type status: str
        """

        self._status = status
