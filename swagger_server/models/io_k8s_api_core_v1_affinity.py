# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1Affinity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, node_affinity: IoK8sApiCoreV1NodeAffinity=None, pod_affinity: IoK8sApiCoreV1PodAffinity=None, pod_anti_affinity: IoK8sApiCoreV1PodAntiAffinity=None):  # noqa: E501
        """IoK8sApiCoreV1Affinity - a model defined in Swagger

        :param node_affinity: The node_affinity of this IoK8sApiCoreV1Affinity.  # noqa: E501
        :type node_affinity: IoK8sApiCoreV1NodeAffinity
        :param pod_affinity: The pod_affinity of this IoK8sApiCoreV1Affinity.  # noqa: E501
        :type pod_affinity: IoK8sApiCoreV1PodAffinity
        :param pod_anti_affinity: The pod_anti_affinity of this IoK8sApiCoreV1Affinity.  # noqa: E501
        :type pod_anti_affinity: IoK8sApiCoreV1PodAntiAffinity
        """
        self.swagger_types = {
            'node_affinity': IoK8sApiCoreV1NodeAffinity,
            'pod_affinity': IoK8sApiCoreV1PodAffinity,
            'pod_anti_affinity': IoK8sApiCoreV1PodAntiAffinity
        }

        self.attribute_map = {
            'node_affinity': 'nodeAffinity',
            'pod_affinity': 'podAffinity',
            'pod_anti_affinity': 'podAntiAffinity'
        }

        self._node_affinity = node_affinity
        self._pod_affinity = pod_affinity
        self._pod_anti_affinity = pod_anti_affinity

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1Affinity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.Affinity of this IoK8sApiCoreV1Affinity.  # noqa: E501
        :rtype: IoK8sApiCoreV1Affinity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_affinity(self) -> IoK8sApiCoreV1NodeAffinity:
        """Gets the node_affinity of this IoK8sApiCoreV1Affinity.

        Describes node affinity scheduling rules for the pod.  # noqa: E501

        :return: The node_affinity of this IoK8sApiCoreV1Affinity.
        :rtype: IoK8sApiCoreV1NodeAffinity
        """
        return self._node_affinity

    @node_affinity.setter
    def node_affinity(self, node_affinity: IoK8sApiCoreV1NodeAffinity):
        """Sets the node_affinity of this IoK8sApiCoreV1Affinity.

        Describes node affinity scheduling rules for the pod.  # noqa: E501

        :param node_affinity: The node_affinity of this IoK8sApiCoreV1Affinity.
        :type node_affinity: IoK8sApiCoreV1NodeAffinity
        """

        self._node_affinity = node_affinity

    @property
    def pod_affinity(self) -> IoK8sApiCoreV1PodAffinity:
        """Gets the pod_affinity of this IoK8sApiCoreV1Affinity.

        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).  # noqa: E501

        :return: The pod_affinity of this IoK8sApiCoreV1Affinity.
        :rtype: IoK8sApiCoreV1PodAffinity
        """
        return self._pod_affinity

    @pod_affinity.setter
    def pod_affinity(self, pod_affinity: IoK8sApiCoreV1PodAffinity):
        """Sets the pod_affinity of this IoK8sApiCoreV1Affinity.

        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).  # noqa: E501

        :param pod_affinity: The pod_affinity of this IoK8sApiCoreV1Affinity.
        :type pod_affinity: IoK8sApiCoreV1PodAffinity
        """

        self._pod_affinity = pod_affinity

    @property
    def pod_anti_affinity(self) -> IoK8sApiCoreV1PodAntiAffinity:
        """Gets the pod_anti_affinity of this IoK8sApiCoreV1Affinity.

        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).  # noqa: E501

        :return: The pod_anti_affinity of this IoK8sApiCoreV1Affinity.
        :rtype: IoK8sApiCoreV1PodAntiAffinity
        """
        return self._pod_anti_affinity

    @pod_anti_affinity.setter
    def pod_anti_affinity(self, pod_anti_affinity: IoK8sApiCoreV1PodAntiAffinity):
        """Sets the pod_anti_affinity of this IoK8sApiCoreV1Affinity.

        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).  # noqa: E501

        :param pod_anti_affinity: The pod_anti_affinity of this IoK8sApiCoreV1Affinity.
        :type pod_anti_affinity: IoK8sApiCoreV1PodAntiAffinity
        """

        self._pod_anti_affinity = pod_anti_affinity
