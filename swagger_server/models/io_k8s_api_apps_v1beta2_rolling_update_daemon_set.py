# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAppsV1beta2RollingUpdateDaemonSet(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, max_unavailable: IoK8sApimachineryPkgUtilIntstrIntOrString=None):  # noqa: E501
        """IoK8sApiAppsV1beta2RollingUpdateDaemonSet - a model defined in Swagger

        :param max_unavailable: The max_unavailable of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.  # noqa: E501
        :type max_unavailable: IoK8sApimachineryPkgUtilIntstrIntOrString
        """
        self.swagger_types = {
            'max_unavailable': IoK8sApimachineryPkgUtilIntstrIntOrString
        }

        self.attribute_map = {
            'max_unavailable': 'maxUnavailable'
        }

        self._max_unavailable = max_unavailable

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAppsV1beta2RollingUpdateDaemonSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.apps.v1beta2.RollingUpdateDaemonSet of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.  # noqa: E501
        :rtype: IoK8sApiAppsV1beta2RollingUpdateDaemonSet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_unavailable(self) -> IoK8sApimachineryPkgUtilIntstrIntOrString:
        """Gets the max_unavailable of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.

        The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.  # noqa: E501

        :return: The max_unavailable of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.
        :rtype: IoK8sApimachineryPkgUtilIntstrIntOrString
        """
        return self._max_unavailable

    @max_unavailable.setter
    def max_unavailable(self, max_unavailable: IoK8sApimachineryPkgUtilIntstrIntOrString):
        """Sets the max_unavailable of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.

        The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.  # noqa: E501

        :param max_unavailable: The max_unavailable of this IoK8sApiAppsV1beta2RollingUpdateDaemonSet.
        :type max_unavailable: IoK8sApimachineryPkgUtilIntstrIntOrString
        """

        self._max_unavailable = max_unavailable
