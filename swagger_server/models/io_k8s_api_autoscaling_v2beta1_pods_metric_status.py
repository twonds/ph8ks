# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAutoscalingV2beta1PodsMetricStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, current_average_value: IoK8sApimachineryPkgApiResourceQuantity=None, metric_name: str=None, selector: IoK8sApimachineryPkgApisMetaV1LabelSelector=None):  # noqa: E501
        """IoK8sApiAutoscalingV2beta1PodsMetricStatus - a model defined in Swagger

        :param current_average_value: The current_average_value of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.  # noqa: E501
        :type current_average_value: IoK8sApimachineryPkgApiResourceQuantity
        :param metric_name: The metric_name of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.  # noqa: E501
        :type metric_name: str
        :param selector: The selector of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.  # noqa: E501
        :type selector: IoK8sApimachineryPkgApisMetaV1LabelSelector
        """
        self.swagger_types = {
            'current_average_value': IoK8sApimachineryPkgApiResourceQuantity,
            'metric_name': str,
            'selector': IoK8sApimachineryPkgApisMetaV1LabelSelector
        }

        self.attribute_map = {
            'current_average_value': 'currentAverageValue',
            'metric_name': 'metricName',
            'selector': 'selector'
        }

        self._current_average_value = current_average_value
        self._metric_name = metric_name
        self._selector = selector

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAutoscalingV2beta1PodsMetricStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.autoscaling.v2beta1.PodsMetricStatus of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2beta1PodsMetricStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_average_value(self) -> IoK8sApimachineryPkgApiResourceQuantity:
        """Gets the current_average_value of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)  # noqa: E501

        :return: The current_average_value of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :rtype: IoK8sApimachineryPkgApiResourceQuantity
        """
        return self._current_average_value

    @current_average_value.setter
    def current_average_value(self, current_average_value: IoK8sApimachineryPkgApiResourceQuantity):
        """Sets the current_average_value of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)  # noqa: E501

        :param current_average_value: The current_average_value of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :type current_average_value: IoK8sApimachineryPkgApiResourceQuantity
        """
        if current_average_value is None:
            raise ValueError("Invalid value for `current_average_value`, must not be `None`")  # noqa: E501

        self._current_average_value = current_average_value

    @property
    def metric_name(self) -> str:
        """Gets the metric_name of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        metricName is the name of the metric in question  # noqa: E501

        :return: The metric_name of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name: str):
        """Sets the metric_name of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        metricName is the name of the metric in question  # noqa: E501

        :param metric_name: The metric_name of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :type metric_name: str
        """
        if metric_name is None:
            raise ValueError("Invalid value for `metric_name`, must not be `None`")  # noqa: E501

        self._metric_name = metric_name

    @property
    def selector(self) -> IoK8sApimachineryPkgApisMetaV1LabelSelector:
        """Gets the selector of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.  # noqa: E501

        :return: The selector of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :rtype: IoK8sApimachineryPkgApisMetaV1LabelSelector
        """
        return self._selector

    @selector.setter
    def selector(self, selector: IoK8sApimachineryPkgApisMetaV1LabelSelector):
        """Sets the selector of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.

        selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.  # noqa: E501

        :param selector: The selector of this IoK8sApiAutoscalingV2beta1PodsMetricStatus.
        :type selector: IoK8sApimachineryPkgApisMetaV1LabelSelector
        """

        self._selector = selector
