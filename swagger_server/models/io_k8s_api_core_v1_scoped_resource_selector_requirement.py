# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1ScopedResourceSelectorRequirement(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, operator: str=None, scope_name: str=None, values: List[str]=None):  # noqa: E501
        """IoK8sApiCoreV1ScopedResourceSelectorRequirement - a model defined in Swagger

        :param operator: The operator of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.  # noqa: E501
        :type operator: str
        :param scope_name: The scope_name of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.  # noqa: E501
        :type scope_name: str
        :param values: The values of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.  # noqa: E501
        :type values: List[str]
        """
        self.swagger_types = {
            'operator': str,
            'scope_name': str,
            'values': List[str]
        }

        self.attribute_map = {
            'operator': 'operator',
            'scope_name': 'scopeName',
            'values': 'values'
        }

        self._operator = operator
        self._scope_name = scope_name
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1ScopedResourceSelectorRequirement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.ScopedResourceSelectorRequirement of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.  # noqa: E501
        :rtype: IoK8sApiCoreV1ScopedResourceSelectorRequirement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operator(self) -> str:
        """Gets the operator of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.  # noqa: E501

        :return: The operator of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator: str):
        """Sets the operator of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.  # noqa: E501

        :param operator: The operator of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :type operator: str
        """
        if operator is None:
            raise ValueError("Invalid value for `operator`, must not be `None`")  # noqa: E501

        self._operator = operator

    @property
    def scope_name(self) -> str:
        """Gets the scope_name of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        The name of the scope that the selector applies to.  # noqa: E501

        :return: The scope_name of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :rtype: str
        """
        return self._scope_name

    @scope_name.setter
    def scope_name(self, scope_name: str):
        """Sets the scope_name of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        The name of the scope that the selector applies to.  # noqa: E501

        :param scope_name: The scope_name of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :type scope_name: str
        """
        if scope_name is None:
            raise ValueError("Invalid value for `scope_name`, must not be `None`")  # noqa: E501

        self._scope_name = scope_name

    @property
    def values(self) -> List[str]:
        """Gets the values of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.  # noqa: E501

        :return: The values of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values: List[str]):
        """Sets the values of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.

        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.  # noqa: E501

        :param values: The values of this IoK8sApiCoreV1ScopedResourceSelectorRequirement.
        :type values: List[str]
        """

        self._values = values
