# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1SecretVolumeSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, default_mode: int=None, items: List[IoK8sApiCoreV1KeyToPath]=None, optional: bool=None, secret_name: str=None):  # noqa: E501
        """IoK8sApiCoreV1SecretVolumeSource - a model defined in Swagger

        :param default_mode: The default_mode of this IoK8sApiCoreV1SecretVolumeSource.  # noqa: E501
        :type default_mode: int
        :param items: The items of this IoK8sApiCoreV1SecretVolumeSource.  # noqa: E501
        :type items: List[IoK8sApiCoreV1KeyToPath]
        :param optional: The optional of this IoK8sApiCoreV1SecretVolumeSource.  # noqa: E501
        :type optional: bool
        :param secret_name: The secret_name of this IoK8sApiCoreV1SecretVolumeSource.  # noqa: E501
        :type secret_name: str
        """
        self.swagger_types = {
            'default_mode': int,
            'items': List[IoK8sApiCoreV1KeyToPath],
            'optional': bool,
            'secret_name': str
        }

        self.attribute_map = {
            'default_mode': 'defaultMode',
            'items': 'items',
            'optional': 'optional',
            'secret_name': 'secretName'
        }

        self._default_mode = default_mode
        self._items = items
        self._optional = optional
        self._secret_name = secret_name

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1SecretVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.SecretVolumeSource of this IoK8sApiCoreV1SecretVolumeSource.  # noqa: E501
        :rtype: IoK8sApiCoreV1SecretVolumeSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_mode(self) -> int:
        """Gets the default_mode of this IoK8sApiCoreV1SecretVolumeSource.

        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  # noqa: E501

        :return: The default_mode of this IoK8sApiCoreV1SecretVolumeSource.
        :rtype: int
        """
        return self._default_mode

    @default_mode.setter
    def default_mode(self, default_mode: int):
        """Sets the default_mode of this IoK8sApiCoreV1SecretVolumeSource.

        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  # noqa: E501

        :param default_mode: The default_mode of this IoK8sApiCoreV1SecretVolumeSource.
        :type default_mode: int
        """

        self._default_mode = default_mode

    @property
    def items(self) -> List[IoK8sApiCoreV1KeyToPath]:
        """Gets the items of this IoK8sApiCoreV1SecretVolumeSource.

        If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.  # noqa: E501

        :return: The items of this IoK8sApiCoreV1SecretVolumeSource.
        :rtype: List[IoK8sApiCoreV1KeyToPath]
        """
        return self._items

    @items.setter
    def items(self, items: List[IoK8sApiCoreV1KeyToPath]):
        """Sets the items of this IoK8sApiCoreV1SecretVolumeSource.

        If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.  # noqa: E501

        :param items: The items of this IoK8sApiCoreV1SecretVolumeSource.
        :type items: List[IoK8sApiCoreV1KeyToPath]
        """

        self._items = items

    @property
    def optional(self) -> bool:
        """Gets the optional of this IoK8sApiCoreV1SecretVolumeSource.

        Specify whether the Secret or its keys must be defined  # noqa: E501

        :return: The optional of this IoK8sApiCoreV1SecretVolumeSource.
        :rtype: bool
        """
        return self._optional

    @optional.setter
    def optional(self, optional: bool):
        """Sets the optional of this IoK8sApiCoreV1SecretVolumeSource.

        Specify whether the Secret or its keys must be defined  # noqa: E501

        :param optional: The optional of this IoK8sApiCoreV1SecretVolumeSource.
        :type optional: bool
        """

        self._optional = optional

    @property
    def secret_name(self) -> str:
        """Gets the secret_name of this IoK8sApiCoreV1SecretVolumeSource.

        Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret  # noqa: E501

        :return: The secret_name of this IoK8sApiCoreV1SecretVolumeSource.
        :rtype: str
        """
        return self._secret_name

    @secret_name.setter
    def secret_name(self, secret_name: str):
        """Sets the secret_name of this IoK8sApiCoreV1SecretVolumeSource.

        Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret  # noqa: E501

        :param secret_name: The secret_name of this IoK8sApiCoreV1SecretVolumeSource.
        :type secret_name: str
        """

        self._secret_name = secret_name
