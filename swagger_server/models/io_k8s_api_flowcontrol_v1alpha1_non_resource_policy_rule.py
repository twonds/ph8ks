# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, non_resource_ur_ls: List[str]=None, verbs: List[str]=None):  # noqa: E501
        """IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule - a model defined in Swagger

        :param non_resource_ur_ls: The non_resource_ur_ls of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.  # noqa: E501
        :type non_resource_ur_ls: List[str]
        :param verbs: The verbs of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.  # noqa: E501
        :type verbs: List[str]
        """
        self.swagger_types = {
            'non_resource_ur_ls': List[str],
            'verbs': List[str]
        }

        self.attribute_map = {
            'non_resource_ur_ls': 'nonResourceURLs',
            'verbs': 'verbs'
        }

        self._non_resource_ur_ls = non_resource_ur_ls
        self._verbs = verbs

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.flowcontrol.v1alpha1.NonResourcePolicyRule of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.  # noqa: E501
        :rtype: IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def non_resource_ur_ls(self) -> List[str]:
        """Gets the non_resource_ur_ls of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.

        `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:   - \"/healthz\" is legal   - \"/hea*\" is illegal   - \"/hea\" is legal but matches nothing   - \"/hea/*\" also matches nothing   - \"/healthz/*\" matches all per-component health checks. \"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.  # noqa: E501

        :return: The non_resource_ur_ls of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.
        :rtype: List[str]
        """
        return self._non_resource_ur_ls

    @non_resource_ur_ls.setter
    def non_resource_ur_ls(self, non_resource_ur_ls: List[str]):
        """Sets the non_resource_ur_ls of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.

        `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:   - \"/healthz\" is legal   - \"/hea*\" is illegal   - \"/hea\" is legal but matches nothing   - \"/hea/*\" also matches nothing   - \"/healthz/*\" matches all per-component health checks. \"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.  # noqa: E501

        :param non_resource_ur_ls: The non_resource_ur_ls of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.
        :type non_resource_ur_ls: List[str]
        """
        if non_resource_ur_ls is None:
            raise ValueError("Invalid value for `non_resource_ur_ls`, must not be `None`")  # noqa: E501

        self._non_resource_ur_ls = non_resource_ur_ls

    @property
    def verbs(self) -> List[str]:
        """Gets the verbs of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.

        `verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.  # noqa: E501

        :return: The verbs of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.
        :rtype: List[str]
        """
        return self._verbs

    @verbs.setter
    def verbs(self, verbs: List[str]):
        """Sets the verbs of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.

        `verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.  # noqa: E501

        :param verbs: The verbs of this IoK8sApiFlowcontrolV1alpha1NonResourcePolicyRule.
        :type verbs: List[str]
        """
        if verbs is None:
            raise ValueError("Invalid value for `verbs`, must not be `None`")  # noqa: E501

        self._verbs = verbs
