# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig=None, conversion_review_versions: List[str]=None):  # noqa: E501
        """IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion - a model defined in Swagger

        :param client_config: The client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.  # noqa: E501
        :type client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
        :param conversion_review_versions: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.  # noqa: E501
        :type conversion_review_versions: List[str]
        """
        self.swagger_types = {
            'client_config': IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig,
            'conversion_review_versions': List[str]
        }

        self.attribute_map = {
            'client_config': 'clientConfig',
            'conversion_review_versions': 'conversionReviewVersions'
        }

        self._client_config = client_config
        self._conversion_review_versions = conversion_review_versions

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.  # noqa: E501
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_config(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig:
        """Gets the client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.

        clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.  # noqa: E501

        :return: The client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
        """
        return self._client_config

    @client_config.setter
    def client_config(self, client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig):
        """Sets the client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.

        clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.  # noqa: E501

        :param client_config: The client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.
        :type client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
        """

        self._client_config = client_config

    @property
    def conversion_review_versions(self) -> List[str]:
        """Gets the conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.

        conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.  # noqa: E501

        :return: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.
        :rtype: List[str]
        """
        return self._conversion_review_versions

    @conversion_review_versions.setter
    def conversion_review_versions(self, conversion_review_versions: List[str]):
        """Sets the conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.

        conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.  # noqa: E501

        :param conversion_review_versions: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion.
        :type conversion_review_versions: List[str]
        """
        if conversion_review_versions is None:
            raise ValueError("Invalid value for `conversion_review_versions`, must not be `None`")  # noqa: E501

        self._conversion_review_versions = conversion_review_versions
