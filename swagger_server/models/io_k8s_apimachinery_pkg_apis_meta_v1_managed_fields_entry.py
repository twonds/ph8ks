# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, fields_type: str=None, fields_v1: IoK8sApimachineryPkgApisMetaV1FieldsV1=None, manager: str=None, operation: str=None, time: IoK8sApimachineryPkgApisMetaV1Time=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type api_version: str
        :param fields_type: The fields_type of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type fields_type: str
        :param fields_v1: The fields_v1 of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type fields_v1: IoK8sApimachineryPkgApisMetaV1FieldsV1
        :param manager: The manager of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type manager: str
        :param operation: The operation of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type operation: str
        :param time: The time of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :type time: IoK8sApimachineryPkgApisMetaV1Time
        """
        self.swagger_types = {
            'api_version': str,
            'fields_type': str,
            'fields_v1': IoK8sApimachineryPkgApisMetaV1FieldsV1,
            'manager': str,
            'operation': str,
            'time': IoK8sApimachineryPkgApisMetaV1Time
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'fields_type': 'fieldsType',
            'fields_v1': 'fieldsV1',
            'manager': 'manager',
            'operation': 'operation',
            'time': 'time'
        }

        self._api_version = api_version
        self._fields_type = fields_type
        self._fields_v1 = fields_v1
        self._manager = manager
        self._operation = operation
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.  # noqa: E501

        :return: The api_version of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.  # noqa: E501

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def fields_type(self) -> str:
        """Gets the fields_type of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"  # noqa: E501

        :return: The fields_type of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: str
        """
        return self._fields_type

    @fields_type.setter
    def fields_type(self, fields_type: str):
        """Sets the fields_type of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"  # noqa: E501

        :param fields_type: The fields_type of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type fields_type: str
        """

        self._fields_type = fields_type

    @property
    def fields_v1(self) -> IoK8sApimachineryPkgApisMetaV1FieldsV1:
        """Gets the fields_v1 of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.  # noqa: E501

        :return: The fields_v1 of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: IoK8sApimachineryPkgApisMetaV1FieldsV1
        """
        return self._fields_v1

    @fields_v1.setter
    def fields_v1(self, fields_v1: IoK8sApimachineryPkgApisMetaV1FieldsV1):
        """Sets the fields_v1 of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.  # noqa: E501

        :param fields_v1: The fields_v1 of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type fields_v1: IoK8sApimachineryPkgApisMetaV1FieldsV1
        """

        self._fields_v1 = fields_v1

    @property
    def manager(self) -> str:
        """Gets the manager of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Manager is an identifier of the workflow managing these fields.  # noqa: E501

        :return: The manager of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: str
        """
        return self._manager

    @manager.setter
    def manager(self, manager: str):
        """Sets the manager of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Manager is an identifier of the workflow managing these fields.  # noqa: E501

        :param manager: The manager of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type manager: str
        """

        self._manager = manager

    @property
    def operation(self) -> str:
        """Gets the operation of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.  # noqa: E501

        :return: The operation of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation: str):
        """Sets the operation of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.  # noqa: E501

        :param operation: The operation of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type operation: str
        """

        self._operation = operation

    @property
    def time(self) -> IoK8sApimachineryPkgApisMetaV1Time:
        """Gets the time of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'  # noqa: E501

        :return: The time of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._time

    @time.setter
    def time(self, time: IoK8sApimachineryPkgApisMetaV1Time):
        """Sets the time of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.

        Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'  # noqa: E501

        :param time: The time of this IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.
        :type time: IoK8sApimachineryPkgApisMetaV1Time
        """

        self._time = time
