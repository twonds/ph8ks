# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAppsV1beta1DeploymentRollback(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, kind: str=None, name: str=None, rollback_to: IoK8sApiAppsV1beta1RollbackConfig=None, updated_annotations: Dict[str, str]=None):  # noqa: E501
        """IoK8sApiAppsV1beta1DeploymentRollback - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :type api_version: str
        :param kind: The kind of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :type kind: str
        :param name: The name of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :type name: str
        :param rollback_to: The rollback_to of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :type rollback_to: IoK8sApiAppsV1beta1RollbackConfig
        :param updated_annotations: The updated_annotations of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :type updated_annotations: Dict[str, str]
        """
        self.swagger_types = {
            'api_version': str,
            'kind': str,
            'name': str,
            'rollback_to': IoK8sApiAppsV1beta1RollbackConfig,
            'updated_annotations': Dict[str, str]
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'kind': 'kind',
            'name': 'name',
            'rollback_to': 'rollbackTo',
            'updated_annotations': 'updatedAnnotations'
        }

        self._api_version = api_version
        self._kind = kind
        self._name = name
        self._rollback_to = rollback_to
        self._updated_annotations = updated_annotations

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAppsV1beta1DeploymentRollback':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.apps.v1beta1.DeploymentRollback of this IoK8sApiAppsV1beta1DeploymentRollback.  # noqa: E501
        :rtype: IoK8sApiAppsV1beta1DeploymentRollback
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApiAppsV1beta1DeploymentRollback.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApiAppsV1beta1DeploymentRollback.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApiAppsV1beta1DeploymentRollback.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApiAppsV1beta1DeploymentRollback.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApiAppsV1beta1DeploymentRollback.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiAppsV1beta1DeploymentRollback.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApiAppsV1beta1DeploymentRollback.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiAppsV1beta1DeploymentRollback.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApiAppsV1beta1DeploymentRollback.

        Required: This must match the Name of a deployment.  # noqa: E501

        :return: The name of this IoK8sApiAppsV1beta1DeploymentRollback.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApiAppsV1beta1DeploymentRollback.

        Required: This must match the Name of a deployment.  # noqa: E501

        :param name: The name of this IoK8sApiAppsV1beta1DeploymentRollback.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def rollback_to(self) -> IoK8sApiAppsV1beta1RollbackConfig:
        """Gets the rollback_to of this IoK8sApiAppsV1beta1DeploymentRollback.

        The config of this deployment rollback.  # noqa: E501

        :return: The rollback_to of this IoK8sApiAppsV1beta1DeploymentRollback.
        :rtype: IoK8sApiAppsV1beta1RollbackConfig
        """
        return self._rollback_to

    @rollback_to.setter
    def rollback_to(self, rollback_to: IoK8sApiAppsV1beta1RollbackConfig):
        """Sets the rollback_to of this IoK8sApiAppsV1beta1DeploymentRollback.

        The config of this deployment rollback.  # noqa: E501

        :param rollback_to: The rollback_to of this IoK8sApiAppsV1beta1DeploymentRollback.
        :type rollback_to: IoK8sApiAppsV1beta1RollbackConfig
        """
        if rollback_to is None:
            raise ValueError("Invalid value for `rollback_to`, must not be `None`")  # noqa: E501

        self._rollback_to = rollback_to

    @property
    def updated_annotations(self) -> Dict[str, str]:
        """Gets the updated_annotations of this IoK8sApiAppsV1beta1DeploymentRollback.

        The annotations to be updated to a deployment  # noqa: E501

        :return: The updated_annotations of this IoK8sApiAppsV1beta1DeploymentRollback.
        :rtype: Dict[str, str]
        """
        return self._updated_annotations

    @updated_annotations.setter
    def updated_annotations(self, updated_annotations: Dict[str, str]):
        """Sets the updated_annotations of this IoK8sApiAppsV1beta1DeploymentRollback.

        The annotations to be updated to a deployment  # noqa: E501

        :param updated_annotations: The updated_annotations of this IoK8sApiAppsV1beta1DeploymentRollback.
        :type updated_annotations: Dict[str, str]
        """

        self._updated_annotations = updated_annotations
