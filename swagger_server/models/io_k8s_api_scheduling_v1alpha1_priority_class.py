# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiSchedulingV1alpha1PriorityClass(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, description: str=None, global_default: bool=None, kind: str=None, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta=None, preemption_policy: str=None, value: int=None):  # noqa: E501
        """IoK8sApiSchedulingV1alpha1PriorityClass - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type api_version: str
        :param description: The description of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type description: str
        :param global_default: The global_default of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type global_default: bool
        :param kind: The kind of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type kind: str
        :param metadata: The metadata of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        :param preemption_policy: The preemption_policy of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type preemption_policy: str
        :param value: The value of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :type value: int
        """
        self.swagger_types = {
            'api_version': str,
            'description': str,
            'global_default': bool,
            'kind': str,
            'metadata': IoK8sApimachineryPkgApisMetaV1ObjectMeta,
            'preemption_policy': str,
            'value': int
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'description': 'description',
            'global_default': 'globalDefault',
            'kind': 'kind',
            'metadata': 'metadata',
            'preemption_policy': 'preemptionPolicy',
            'value': 'value'
        }

        self._api_version = api_version
        self._description = description
        self._global_default = global_default
        self._kind = kind
        self._metadata = metadata
        self._preemption_policy = preemption_policy
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiSchedulingV1alpha1PriorityClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.scheduling.v1alpha1.PriorityClass of this IoK8sApiSchedulingV1alpha1PriorityClass.  # noqa: E501
        :rtype: IoK8sApiSchedulingV1alpha1PriorityClass
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApiSchedulingV1alpha1PriorityClass.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApiSchedulingV1alpha1PriorityClass.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def description(self) -> str:
        """Gets the description of this IoK8sApiSchedulingV1alpha1PriorityClass.

        description is an arbitrary string that usually provides guidelines on when this priority class should be used.  # noqa: E501

        :return: The description of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this IoK8sApiSchedulingV1alpha1PriorityClass.

        description is an arbitrary string that usually provides guidelines on when this priority class should be used.  # noqa: E501

        :param description: The description of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type description: str
        """

        self._description = description

    @property
    def global_default(self) -> bool:
        """Gets the global_default of this IoK8sApiSchedulingV1alpha1PriorityClass.

        globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.  # noqa: E501

        :return: The global_default of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: bool
        """
        return self._global_default

    @global_default.setter
    def global_default(self, global_default: bool):
        """Sets the global_default of this IoK8sApiSchedulingV1alpha1PriorityClass.

        globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.  # noqa: E501

        :param global_default: The global_default of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type global_default: bool
        """

        self._global_default = global_default

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApiSchedulingV1alpha1PriorityClass.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApiSchedulingV1alpha1PriorityClass.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self) -> IoK8sApimachineryPkgApisMetaV1ObjectMeta:
        """Gets the metadata of this IoK8sApiSchedulingV1alpha1PriorityClass.

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :return: The metadata of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta):
        """Sets the metadata of this IoK8sApiSchedulingV1alpha1PriorityClass.

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :param metadata: The metadata of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """

        self._metadata = metadata

    @property
    def preemption_policy(self) -> str:
        """Gets the preemption_policy of this IoK8sApiSchedulingV1alpha1PriorityClass.

        PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.  # noqa: E501

        :return: The preemption_policy of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: str
        """
        return self._preemption_policy

    @preemption_policy.setter
    def preemption_policy(self, preemption_policy: str):
        """Sets the preemption_policy of this IoK8sApiSchedulingV1alpha1PriorityClass.

        PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.  # noqa: E501

        :param preemption_policy: The preemption_policy of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type preemption_policy: str
        """

        self._preemption_policy = preemption_policy

    @property
    def value(self) -> int:
        """Gets the value of this IoK8sApiSchedulingV1alpha1PriorityClass.

        The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.  # noqa: E501

        :return: The value of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this IoK8sApiSchedulingV1alpha1PriorityClass.

        The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.  # noqa: E501

        :param value: The value of this IoK8sApiSchedulingV1alpha1PriorityClass.
        :type value: int
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value
