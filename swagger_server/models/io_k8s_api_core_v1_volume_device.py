# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1VolumeDevice(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, device_path: str=None, name: str=None):  # noqa: E501
        """IoK8sApiCoreV1VolumeDevice - a model defined in Swagger

        :param device_path: The device_path of this IoK8sApiCoreV1VolumeDevice.  # noqa: E501
        :type device_path: str
        :param name: The name of this IoK8sApiCoreV1VolumeDevice.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'device_path': str,
            'name': str
        }

        self.attribute_map = {
            'device_path': 'devicePath',
            'name': 'name'
        }

        self._device_path = device_path
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1VolumeDevice':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.VolumeDevice of this IoK8sApiCoreV1VolumeDevice.  # noqa: E501
        :rtype: IoK8sApiCoreV1VolumeDevice
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_path(self) -> str:
        """Gets the device_path of this IoK8sApiCoreV1VolumeDevice.

        devicePath is the path inside of the container that the device will be mapped to.  # noqa: E501

        :return: The device_path of this IoK8sApiCoreV1VolumeDevice.
        :rtype: str
        """
        return self._device_path

    @device_path.setter
    def device_path(self, device_path: str):
        """Sets the device_path of this IoK8sApiCoreV1VolumeDevice.

        devicePath is the path inside of the container that the device will be mapped to.  # noqa: E501

        :param device_path: The device_path of this IoK8sApiCoreV1VolumeDevice.
        :type device_path: str
        """
        if device_path is None:
            raise ValueError("Invalid value for `device_path`, must not be `None`")  # noqa: E501

        self._device_path = device_path

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApiCoreV1VolumeDevice.

        name must match the name of a persistentVolumeClaim in the pod  # noqa: E501

        :return: The name of this IoK8sApiCoreV1VolumeDevice.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApiCoreV1VolumeDevice.

        name must match the name of a persistentVolumeClaim in the pod  # noqa: E501

        :param name: The name of this IoK8sApiCoreV1VolumeDevice.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name
