# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1DownwardAPIVolumeFile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, field_ref: IoK8sApiCoreV1ObjectFieldSelector=None, mode: int=None, path: str=None, resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector=None):  # noqa: E501
        """IoK8sApiCoreV1DownwardAPIVolumeFile - a model defined in Swagger

        :param field_ref: The field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.  # noqa: E501
        :type field_ref: IoK8sApiCoreV1ObjectFieldSelector
        :param mode: The mode of this IoK8sApiCoreV1DownwardAPIVolumeFile.  # noqa: E501
        :type mode: int
        :param path: The path of this IoK8sApiCoreV1DownwardAPIVolumeFile.  # noqa: E501
        :type path: str
        :param resource_field_ref: The resource_field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.  # noqa: E501
        :type resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector
        """
        self.swagger_types = {
            'field_ref': IoK8sApiCoreV1ObjectFieldSelector,
            'mode': int,
            'path': str,
            'resource_field_ref': IoK8sApiCoreV1ResourceFieldSelector
        }

        self.attribute_map = {
            'field_ref': 'fieldRef',
            'mode': 'mode',
            'path': 'path',
            'resource_field_ref': 'resourceFieldRef'
        }

        self._field_ref = field_ref
        self._mode = mode
        self._path = path
        self._resource_field_ref = resource_field_ref

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1DownwardAPIVolumeFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.DownwardAPIVolumeFile of this IoK8sApiCoreV1DownwardAPIVolumeFile.  # noqa: E501
        :rtype: IoK8sApiCoreV1DownwardAPIVolumeFile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_ref(self) -> IoK8sApiCoreV1ObjectFieldSelector:
        """Gets the field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.  # noqa: E501

        :return: The field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :rtype: IoK8sApiCoreV1ObjectFieldSelector
        """
        return self._field_ref

    @field_ref.setter
    def field_ref(self, field_ref: IoK8sApiCoreV1ObjectFieldSelector):
        """Sets the field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.  # noqa: E501

        :param field_ref: The field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :type field_ref: IoK8sApiCoreV1ObjectFieldSelector
        """

        self._field_ref = field_ref

    @property
    def mode(self) -> int:
        """Gets the mode of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  # noqa: E501

        :return: The mode of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :rtype: int
        """
        return self._mode

    @mode.setter
    def mode(self, mode: int):
        """Sets the mode of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  # noqa: E501

        :param mode: The mode of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :type mode: int
        """

        self._mode = mode

    @property
    def path(self) -> str:
        """Gets the path of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'  # noqa: E501

        :return: The path of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'  # noqa: E501

        :param path: The path of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def resource_field_ref(self) -> IoK8sApiCoreV1ResourceFieldSelector:
        """Gets the resource_field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.  # noqa: E501

        :return: The resource_field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :rtype: IoK8sApiCoreV1ResourceFieldSelector
        """
        return self._resource_field_ref

    @resource_field_ref.setter
    def resource_field_ref(self, resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector):
        """Sets the resource_field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.

        Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.  # noqa: E501

        :param resource_field_ref: The resource_field_ref of this IoK8sApiCoreV1DownwardAPIVolumeFile.
        :type resource_field_ref: IoK8sApiCoreV1ResourceFieldSelector
        """

        self._resource_field_ref = resource_field_ref
