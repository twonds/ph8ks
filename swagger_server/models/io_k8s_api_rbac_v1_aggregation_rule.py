# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiRbacV1AggregationRule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, cluster_role_selectors: List[IoK8sApimachineryPkgApisMetaV1LabelSelector]=None):  # noqa: E501
        """IoK8sApiRbacV1AggregationRule - a model defined in Swagger

        :param cluster_role_selectors: The cluster_role_selectors of this IoK8sApiRbacV1AggregationRule.  # noqa: E501
        :type cluster_role_selectors: List[IoK8sApimachineryPkgApisMetaV1LabelSelector]
        """
        self.swagger_types = {
            'cluster_role_selectors': List[IoK8sApimachineryPkgApisMetaV1LabelSelector]
        }

        self.attribute_map = {
            'cluster_role_selectors': 'clusterRoleSelectors'
        }

        self._cluster_role_selectors = cluster_role_selectors

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiRbacV1AggregationRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.rbac.v1.AggregationRule of this IoK8sApiRbacV1AggregationRule.  # noqa: E501
        :rtype: IoK8sApiRbacV1AggregationRule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_role_selectors(self) -> List[IoK8sApimachineryPkgApisMetaV1LabelSelector]:
        """Gets the cluster_role_selectors of this IoK8sApiRbacV1AggregationRule.

        ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added  # noqa: E501

        :return: The cluster_role_selectors of this IoK8sApiRbacV1AggregationRule.
        :rtype: List[IoK8sApimachineryPkgApisMetaV1LabelSelector]
        """
        return self._cluster_role_selectors

    @cluster_role_selectors.setter
    def cluster_role_selectors(self, cluster_role_selectors: List[IoK8sApimachineryPkgApisMetaV1LabelSelector]):
        """Sets the cluster_role_selectors of this IoK8sApiRbacV1AggregationRule.

        ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added  # noqa: E501

        :param cluster_role_selectors: The cluster_role_selectors of this IoK8sApiRbacV1AggregationRule.
        :type cluster_role_selectors: List[IoK8sApimachineryPkgApisMetaV1LabelSelector]
        """

        self._cluster_role_selectors = cluster_role_selectors
