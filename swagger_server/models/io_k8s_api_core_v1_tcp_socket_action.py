# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1TCPSocketAction(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, port: IoK8sApimachineryPkgUtilIntstrIntOrString=None):  # noqa: E501
        """IoK8sApiCoreV1TCPSocketAction - a model defined in Swagger

        :param host: The host of this IoK8sApiCoreV1TCPSocketAction.  # noqa: E501
        :type host: str
        :param port: The port of this IoK8sApiCoreV1TCPSocketAction.  # noqa: E501
        :type port: IoK8sApimachineryPkgUtilIntstrIntOrString
        """
        self.swagger_types = {
            'host': str,
            'port': IoK8sApimachineryPkgUtilIntstrIntOrString
        }

        self.attribute_map = {
            'host': 'host',
            'port': 'port'
        }

        self._host = host
        self._port = port

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1TCPSocketAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.TCPSocketAction of this IoK8sApiCoreV1TCPSocketAction.  # noqa: E501
        :rtype: IoK8sApiCoreV1TCPSocketAction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self) -> str:
        """Gets the host of this IoK8sApiCoreV1TCPSocketAction.

        Optional: Host name to connect to, defaults to the pod IP.  # noqa: E501

        :return: The host of this IoK8sApiCoreV1TCPSocketAction.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host: str):
        """Sets the host of this IoK8sApiCoreV1TCPSocketAction.

        Optional: Host name to connect to, defaults to the pod IP.  # noqa: E501

        :param host: The host of this IoK8sApiCoreV1TCPSocketAction.
        :type host: str
        """

        self._host = host

    @property
    def port(self) -> IoK8sApimachineryPkgUtilIntstrIntOrString:
        """Gets the port of this IoK8sApiCoreV1TCPSocketAction.

        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.  # noqa: E501

        :return: The port of this IoK8sApiCoreV1TCPSocketAction.
        :rtype: IoK8sApimachineryPkgUtilIntstrIntOrString
        """
        return self._port

    @port.setter
    def port(self, port: IoK8sApimachineryPkgUtilIntstrIntOrString):
        """Sets the port of this IoK8sApiCoreV1TCPSocketAction.

        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.  # noqa: E501

        :param port: The port of this IoK8sApiCoreV1TCPSocketAction.
        :type port: IoK8sApimachineryPkgUtilIntstrIntOrString
        """
        if port is None:
            raise ValueError("Invalid value for `port`, must not be `None`")  # noqa: E501

        self._port = port
