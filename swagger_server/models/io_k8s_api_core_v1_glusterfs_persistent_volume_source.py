# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1GlusterfsPersistentVolumeSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, endpoints: str=None, endpoints_namespace: str=None, path: str=None, read_only: bool=None):  # noqa: E501
        """IoK8sApiCoreV1GlusterfsPersistentVolumeSource - a model defined in Swagger

        :param endpoints: The endpoints of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.  # noqa: E501
        :type endpoints: str
        :param endpoints_namespace: The endpoints_namespace of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.  # noqa: E501
        :type endpoints_namespace: str
        :param path: The path of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.  # noqa: E501
        :type path: str
        :param read_only: The read_only of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.  # noqa: E501
        :type read_only: bool
        """
        self.swagger_types = {
            'endpoints': str,
            'endpoints_namespace': str,
            'path': str,
            'read_only': bool
        }

        self.attribute_map = {
            'endpoints': 'endpoints',
            'endpoints_namespace': 'endpointsNamespace',
            'path': 'path',
            'read_only': 'readOnly'
        }

        self._endpoints = endpoints
        self._endpoints_namespace = endpoints_namespace
        self._path = path
        self._read_only = read_only

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1GlusterfsPersistentVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.GlusterfsPersistentVolumeSource of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.  # noqa: E501
        :rtype: IoK8sApiCoreV1GlusterfsPersistentVolumeSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoints(self) -> str:
        """Gets the endpoints of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :return: The endpoints of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :rtype: str
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints: str):
        """Sets the endpoints of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :param endpoints: The endpoints of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :type endpoints: str
        """
        if endpoints is None:
            raise ValueError("Invalid value for `endpoints`, must not be `None`")  # noqa: E501

        self._endpoints = endpoints

    @property
    def endpoints_namespace(self) -> str:
        """Gets the endpoints_namespace of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :return: The endpoints_namespace of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :rtype: str
        """
        return self._endpoints_namespace

    @endpoints_namespace.setter
    def endpoints_namespace(self, endpoints_namespace: str):
        """Sets the endpoints_namespace of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :param endpoints_namespace: The endpoints_namespace of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :type endpoints_namespace: str
        """

        self._endpoints_namespace = endpoints_namespace

    @property
    def path(self) -> str:
        """Gets the path of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :return: The path of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :param path: The path of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def read_only(self) -> bool:
        """Gets the read_only of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :return: The read_only of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only: bool):
        """Sets the read_only of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.

        ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod  # noqa: E501

        :param read_only: The read_only of this IoK8sApiCoreV1GlusterfsPersistentVolumeSource.
        :type read_only: bool
        """

        self._read_only = read_only
