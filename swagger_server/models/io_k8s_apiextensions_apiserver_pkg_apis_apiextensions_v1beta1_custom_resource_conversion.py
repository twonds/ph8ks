# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, conversion_review_versions: List[str]=None, strategy: str=None, webhook_client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig=None):  # noqa: E501
        """IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion - a model defined in Swagger

        :param conversion_review_versions: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.  # noqa: E501
        :type conversion_review_versions: List[str]
        :param strategy: The strategy of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.  # noqa: E501
        :type strategy: str
        :param webhook_client_config: The webhook_client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.  # noqa: E501
        :type webhook_client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig
        """
        self.swagger_types = {
            'conversion_review_versions': List[str],
            'strategy': str,
            'webhook_client_config': IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig
        }

        self.attribute_map = {
            'conversion_review_versions': 'conversionReviewVersions',
            'strategy': 'strategy',
            'webhook_client_config': 'webhookClientConfig'
        }

        self._conversion_review_versions = conversion_review_versions
        self._strategy = strategy
        self._webhook_client_config = webhook_client_config

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.  # noqa: E501
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion_review_versions(self) -> List[str]:
        """Gets the conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `[\"v1beta1\"]`.  # noqa: E501

        :return: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :rtype: List[str]
        """
        return self._conversion_review_versions

    @conversion_review_versions.setter
    def conversion_review_versions(self, conversion_review_versions: List[str]):
        """Sets the conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `[\"v1beta1\"]`.  # noqa: E501

        :param conversion_review_versions: The conversion_review_versions of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :type conversion_review_versions: List[str]
        """

        self._conversion_review_versions = conversion_review_versions

    @property
    def strategy(self) -> str:
        """Gets the strategy of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.  # noqa: E501

        :return: The strategy of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :rtype: str
        """
        return self._strategy

    @strategy.setter
    def strategy(self, strategy: str):
        """Sets the strategy of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.  # noqa: E501

        :param strategy: The strategy of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :type strategy: str
        """
        if strategy is None:
            raise ValueError("Invalid value for `strategy`, must not be `None`")  # noqa: E501

        self._strategy = strategy

    @property
    def webhook_client_config(self) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig:
        """Gets the webhook_client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.  # noqa: E501

        :return: The webhook_client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :rtype: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig
        """
        return self._webhook_client_config

    @webhook_client_config.setter
    def webhook_client_config(self, webhook_client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig):
        """Sets the webhook_client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.

        webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.  # noqa: E501

        :param webhook_client_config: The webhook_client_config of this IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceConversion.
        :type webhook_client_config: IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1WebhookClientConfig
        """

        self._webhook_client_config = webhook_client_config
