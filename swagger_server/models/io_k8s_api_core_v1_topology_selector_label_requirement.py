# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1TopologySelectorLabelRequirement(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, values: List[str]=None):  # noqa: E501
        """IoK8sApiCoreV1TopologySelectorLabelRequirement - a model defined in Swagger

        :param key: The key of this IoK8sApiCoreV1TopologySelectorLabelRequirement.  # noqa: E501
        :type key: str
        :param values: The values of this IoK8sApiCoreV1TopologySelectorLabelRequirement.  # noqa: E501
        :type values: List[str]
        """
        self.swagger_types = {
            'key': str,
            'values': List[str]
        }

        self.attribute_map = {
            'key': 'key',
            'values': 'values'
        }

        self._key = key
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1TopologySelectorLabelRequirement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.TopologySelectorLabelRequirement of this IoK8sApiCoreV1TopologySelectorLabelRequirement.  # noqa: E501
        :rtype: IoK8sApiCoreV1TopologySelectorLabelRequirement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """Gets the key of this IoK8sApiCoreV1TopologySelectorLabelRequirement.

        The label key that the selector applies to.  # noqa: E501

        :return: The key of this IoK8sApiCoreV1TopologySelectorLabelRequirement.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this IoK8sApiCoreV1TopologySelectorLabelRequirement.

        The label key that the selector applies to.  # noqa: E501

        :param key: The key of this IoK8sApiCoreV1TopologySelectorLabelRequirement.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")  # noqa: E501

        self._key = key

    @property
    def values(self) -> List[str]:
        """Gets the values of this IoK8sApiCoreV1TopologySelectorLabelRequirement.

        An array of string values. One value must match the label to be selected. Each entry in Values is ORed.  # noqa: E501

        :return: The values of this IoK8sApiCoreV1TopologySelectorLabelRequirement.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values: List[str]):
        """Sets the values of this IoK8sApiCoreV1TopologySelectorLabelRequirement.

        An array of string values. One value must match the label to be selected. Each entry in Values is ORed.  # noqa: E501

        :param values: The values of this IoK8sApiCoreV1TopologySelectorLabelRequirement.
        :type values: List[str]
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")  # noqa: E501

        self._values = values
