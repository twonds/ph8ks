# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAppsV1beta1ControllerRevision(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, data: IoK8sApimachineryPkgRuntimeRawExtension=None, kind: str=None, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta=None, revision: int=None):  # noqa: E501
        """IoK8sApiAppsV1beta1ControllerRevision - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :type api_version: str
        :param data: The data of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :type data: IoK8sApimachineryPkgRuntimeRawExtension
        :param kind: The kind of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :type kind: str
        :param metadata: The metadata of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        :param revision: The revision of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :type revision: int
        """
        self.swagger_types = {
            'api_version': str,
            'data': IoK8sApimachineryPkgRuntimeRawExtension,
            'kind': str,
            'metadata': IoK8sApimachineryPkgApisMetaV1ObjectMeta,
            'revision': int
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'data': 'data',
            'kind': 'kind',
            'metadata': 'metadata',
            'revision': 'revision'
        }

        self._api_version = api_version
        self._data = data
        self._kind = kind
        self._metadata = metadata
        self._revision = revision

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAppsV1beta1ControllerRevision':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.apps.v1beta1.ControllerRevision of this IoK8sApiAppsV1beta1ControllerRevision.  # noqa: E501
        :rtype: IoK8sApiAppsV1beta1ControllerRevision
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApiAppsV1beta1ControllerRevision.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApiAppsV1beta1ControllerRevision.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApiAppsV1beta1ControllerRevision.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApiAppsV1beta1ControllerRevision.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def data(self) -> IoK8sApimachineryPkgRuntimeRawExtension:
        """Gets the data of this IoK8sApiAppsV1beta1ControllerRevision.

        Data is the serialized representation of the state.  # noqa: E501

        :return: The data of this IoK8sApiAppsV1beta1ControllerRevision.
        :rtype: IoK8sApimachineryPkgRuntimeRawExtension
        """
        return self._data

    @data.setter
    def data(self, data: IoK8sApimachineryPkgRuntimeRawExtension):
        """Sets the data of this IoK8sApiAppsV1beta1ControllerRevision.

        Data is the serialized representation of the state.  # noqa: E501

        :param data: The data of this IoK8sApiAppsV1beta1ControllerRevision.
        :type data: IoK8sApimachineryPkgRuntimeRawExtension
        """

        self._data = data

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApiAppsV1beta1ControllerRevision.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiAppsV1beta1ControllerRevision.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApiAppsV1beta1ControllerRevision.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiAppsV1beta1ControllerRevision.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self) -> IoK8sApimachineryPkgApisMetaV1ObjectMeta:
        """Gets the metadata of this IoK8sApiAppsV1beta1ControllerRevision.

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :return: The metadata of this IoK8sApiAppsV1beta1ControllerRevision.
        :rtype: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta):
        """Sets the metadata of this IoK8sApiAppsV1beta1ControllerRevision.

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :param metadata: The metadata of this IoK8sApiAppsV1beta1ControllerRevision.
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """

        self._metadata = metadata

    @property
    def revision(self) -> int:
        """Gets the revision of this IoK8sApiAppsV1beta1ControllerRevision.

        Revision indicates the revision of the state represented by Data.  # noqa: E501

        :return: The revision of this IoK8sApiAppsV1beta1ControllerRevision.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision: int):
        """Sets the revision of this IoK8sApiAppsV1beta1ControllerRevision.

        Revision indicates the revision of the state represented by Data.  # noqa: E501

        :param revision: The revision of this IoK8sApiAppsV1beta1ControllerRevision.
        :type revision: int
        """
        if revision is None:
            raise ValueError("Invalid value for `revision`, must not be `None`")  # noqa: E501

        self._revision = revision
