# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, conditions: List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]=None):  # noqa: E501
        """IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus - a model defined in Swagger

        :param conditions: The conditions of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.  # noqa: E501
        :type conditions: List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]
        """
        self.swagger_types = {
            'conditions': List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]
        }

        self.attribute_map = {
            'conditions': 'conditions'
        }

        self._conditions = conditions

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationStatus of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.  # noqa: E501
        :rtype: IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self) -> List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]:
        """Gets the conditions of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.

        `conditions` is the current state of \"request-priority\".  # noqa: E501

        :return: The conditions of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.
        :rtype: List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions: List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]):
        """Sets the conditions of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.

        `conditions` is the current state of \"request-priority\".  # noqa: E501

        :param conditions: The conditions of this IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationStatus.
        :type conditions: List[IoK8sApiFlowcontrolV1alpha1PriorityLevelConfigurationCondition]
        """

        self._conditions = conditions
