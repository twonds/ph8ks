# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiEventsV1beta1Event(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, api_version: str=None, deprecated_count: int=None, deprecated_first_timestamp: IoK8sApimachineryPkgApisMetaV1Time=None, deprecated_last_timestamp: IoK8sApimachineryPkgApisMetaV1Time=None, deprecated_source: IoK8sApiCoreV1EventSource=None, event_time: IoK8sApimachineryPkgApisMetaV1MicroTime=None, kind: str=None, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta=None, note: str=None, reason: str=None, regarding: IoK8sApiCoreV1ObjectReference=None, related: IoK8sApiCoreV1ObjectReference=None, reporting_controller: str=None, reporting_instance: str=None, series: IoK8sApiEventsV1beta1EventSeries=None, type: str=None):  # noqa: E501
        """IoK8sApiEventsV1beta1Event - a model defined in Swagger

        :param action: The action of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type action: str
        :param api_version: The api_version of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type api_version: str
        :param deprecated_count: The deprecated_count of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type deprecated_count: int
        :param deprecated_first_timestamp: The deprecated_first_timestamp of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type deprecated_first_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        :param deprecated_last_timestamp: The deprecated_last_timestamp of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type deprecated_last_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        :param deprecated_source: The deprecated_source of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type deprecated_source: IoK8sApiCoreV1EventSource
        :param event_time: The event_time of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type event_time: IoK8sApimachineryPkgApisMetaV1MicroTime
        :param kind: The kind of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type kind: str
        :param metadata: The metadata of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        :param note: The note of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type note: str
        :param reason: The reason of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type reason: str
        :param regarding: The regarding of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type regarding: IoK8sApiCoreV1ObjectReference
        :param related: The related of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type related: IoK8sApiCoreV1ObjectReference
        :param reporting_controller: The reporting_controller of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type reporting_controller: str
        :param reporting_instance: The reporting_instance of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type reporting_instance: str
        :param series: The series of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type series: IoK8sApiEventsV1beta1EventSeries
        :param type: The type of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'action': str,
            'api_version': str,
            'deprecated_count': int,
            'deprecated_first_timestamp': IoK8sApimachineryPkgApisMetaV1Time,
            'deprecated_last_timestamp': IoK8sApimachineryPkgApisMetaV1Time,
            'deprecated_source': IoK8sApiCoreV1EventSource,
            'event_time': IoK8sApimachineryPkgApisMetaV1MicroTime,
            'kind': str,
            'metadata': IoK8sApimachineryPkgApisMetaV1ObjectMeta,
            'note': str,
            'reason': str,
            'regarding': IoK8sApiCoreV1ObjectReference,
            'related': IoK8sApiCoreV1ObjectReference,
            'reporting_controller': str,
            'reporting_instance': str,
            'series': IoK8sApiEventsV1beta1EventSeries,
            'type': str
        }

        self.attribute_map = {
            'action': 'action',
            'api_version': 'apiVersion',
            'deprecated_count': 'deprecatedCount',
            'deprecated_first_timestamp': 'deprecatedFirstTimestamp',
            'deprecated_last_timestamp': 'deprecatedLastTimestamp',
            'deprecated_source': 'deprecatedSource',
            'event_time': 'eventTime',
            'kind': 'kind',
            'metadata': 'metadata',
            'note': 'note',
            'reason': 'reason',
            'regarding': 'regarding',
            'related': 'related',
            'reporting_controller': 'reportingController',
            'reporting_instance': 'reportingInstance',
            'series': 'series',
            'type': 'type'
        }

        self._action = action
        self._api_version = api_version
        self._deprecated_count = deprecated_count
        self._deprecated_first_timestamp = deprecated_first_timestamp
        self._deprecated_last_timestamp = deprecated_last_timestamp
        self._deprecated_source = deprecated_source
        self._event_time = event_time
        self._kind = kind
        self._metadata = metadata
        self._note = note
        self._reason = reason
        self._regarding = regarding
        self._related = related
        self._reporting_controller = reporting_controller
        self._reporting_instance = reporting_instance
        self._series = series
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiEventsV1beta1Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.events.v1beta1.Event of this IoK8sApiEventsV1beta1Event.  # noqa: E501
        :rtype: IoK8sApiEventsV1beta1Event
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self) -> str:
        """Gets the action of this IoK8sApiEventsV1beta1Event.

        What action was taken/failed regarding to the regarding object.  # noqa: E501

        :return: The action of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action: str):
        """Sets the action of this IoK8sApiEventsV1beta1Event.

        What action was taken/failed regarding to the regarding object.  # noqa: E501

        :param action: The action of this IoK8sApiEventsV1beta1Event.
        :type action: str
        """

        self._action = action

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApiEventsV1beta1Event.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApiEventsV1beta1Event.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApiEventsV1beta1Event.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def deprecated_count(self) -> int:
        """Gets the deprecated_count of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :return: The deprecated_count of this IoK8sApiEventsV1beta1Event.
        :rtype: int
        """
        return self._deprecated_count

    @deprecated_count.setter
    def deprecated_count(self, deprecated_count: int):
        """Sets the deprecated_count of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :param deprecated_count: The deprecated_count of this IoK8sApiEventsV1beta1Event.
        :type deprecated_count: int
        """

        self._deprecated_count = deprecated_count

    @property
    def deprecated_first_timestamp(self) -> IoK8sApimachineryPkgApisMetaV1Time:
        """Gets the deprecated_first_timestamp of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :return: The deprecated_first_timestamp of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._deprecated_first_timestamp

    @deprecated_first_timestamp.setter
    def deprecated_first_timestamp(self, deprecated_first_timestamp: IoK8sApimachineryPkgApisMetaV1Time):
        """Sets the deprecated_first_timestamp of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :param deprecated_first_timestamp: The deprecated_first_timestamp of this IoK8sApiEventsV1beta1Event.
        :type deprecated_first_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        """

        self._deprecated_first_timestamp = deprecated_first_timestamp

    @property
    def deprecated_last_timestamp(self) -> IoK8sApimachineryPkgApisMetaV1Time:
        """Gets the deprecated_last_timestamp of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :return: The deprecated_last_timestamp of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._deprecated_last_timestamp

    @deprecated_last_timestamp.setter
    def deprecated_last_timestamp(self, deprecated_last_timestamp: IoK8sApimachineryPkgApisMetaV1Time):
        """Sets the deprecated_last_timestamp of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :param deprecated_last_timestamp: The deprecated_last_timestamp of this IoK8sApiEventsV1beta1Event.
        :type deprecated_last_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        """

        self._deprecated_last_timestamp = deprecated_last_timestamp

    @property
    def deprecated_source(self) -> IoK8sApiCoreV1EventSource:
        """Gets the deprecated_source of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :return: The deprecated_source of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApiCoreV1EventSource
        """
        return self._deprecated_source

    @deprecated_source.setter
    def deprecated_source(self, deprecated_source: IoK8sApiCoreV1EventSource):
        """Sets the deprecated_source of this IoK8sApiEventsV1beta1Event.

        Deprecated field assuring backward compatibility with core.v1 Event type  # noqa: E501

        :param deprecated_source: The deprecated_source of this IoK8sApiEventsV1beta1Event.
        :type deprecated_source: IoK8sApiCoreV1EventSource
        """

        self._deprecated_source = deprecated_source

    @property
    def event_time(self) -> IoK8sApimachineryPkgApisMetaV1MicroTime:
        """Gets the event_time of this IoK8sApiEventsV1beta1Event.

        Required. Time when this Event was first observed.  # noqa: E501

        :return: The event_time of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApimachineryPkgApisMetaV1MicroTime
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time: IoK8sApimachineryPkgApisMetaV1MicroTime):
        """Sets the event_time of this IoK8sApiEventsV1beta1Event.

        Required. Time when this Event was first observed.  # noqa: E501

        :param event_time: The event_time of this IoK8sApiEventsV1beta1Event.
        :type event_time: IoK8sApimachineryPkgApisMetaV1MicroTime
        """
        if event_time is None:
            raise ValueError("Invalid value for `event_time`, must not be `None`")  # noqa: E501

        self._event_time = event_time

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApiEventsV1beta1Event.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApiEventsV1beta1Event.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiEventsV1beta1Event.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self) -> IoK8sApimachineryPkgApisMetaV1ObjectMeta:
        """Gets the metadata of this IoK8sApiEventsV1beta1Event.


        :return: The metadata of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta):
        """Sets the metadata of this IoK8sApiEventsV1beta1Event.


        :param metadata: The metadata of this IoK8sApiEventsV1beta1Event.
        :type metadata: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """

        self._metadata = metadata

    @property
    def note(self) -> str:
        """Gets the note of this IoK8sApiEventsV1beta1Event.

        Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.  # noqa: E501

        :return: The note of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note: str):
        """Sets the note of this IoK8sApiEventsV1beta1Event.

        Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.  # noqa: E501

        :param note: The note of this IoK8sApiEventsV1beta1Event.
        :type note: str
        """

        self._note = note

    @property
    def reason(self) -> str:
        """Gets the reason of this IoK8sApiEventsV1beta1Event.

        Why the action was taken.  # noqa: E501

        :return: The reason of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this IoK8sApiEventsV1beta1Event.

        Why the action was taken.  # noqa: E501

        :param reason: The reason of this IoK8sApiEventsV1beta1Event.
        :type reason: str
        """

        self._reason = reason

    @property
    def regarding(self) -> IoK8sApiCoreV1ObjectReference:
        """Gets the regarding of this IoK8sApiEventsV1beta1Event.

        The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.  # noqa: E501

        :return: The regarding of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApiCoreV1ObjectReference
        """
        return self._regarding

    @regarding.setter
    def regarding(self, regarding: IoK8sApiCoreV1ObjectReference):
        """Sets the regarding of this IoK8sApiEventsV1beta1Event.

        The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.  # noqa: E501

        :param regarding: The regarding of this IoK8sApiEventsV1beta1Event.
        :type regarding: IoK8sApiCoreV1ObjectReference
        """

        self._regarding = regarding

    @property
    def related(self) -> IoK8sApiCoreV1ObjectReference:
        """Gets the related of this IoK8sApiEventsV1beta1Event.

        Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.  # noqa: E501

        :return: The related of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApiCoreV1ObjectReference
        """
        return self._related

    @related.setter
    def related(self, related: IoK8sApiCoreV1ObjectReference):
        """Sets the related of this IoK8sApiEventsV1beta1Event.

        Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.  # noqa: E501

        :param related: The related of this IoK8sApiEventsV1beta1Event.
        :type related: IoK8sApiCoreV1ObjectReference
        """

        self._related = related

    @property
    def reporting_controller(self) -> str:
        """Gets the reporting_controller of this IoK8sApiEventsV1beta1Event.

        Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.  # noqa: E501

        :return: The reporting_controller of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._reporting_controller

    @reporting_controller.setter
    def reporting_controller(self, reporting_controller: str):
        """Sets the reporting_controller of this IoK8sApiEventsV1beta1Event.

        Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.  # noqa: E501

        :param reporting_controller: The reporting_controller of this IoK8sApiEventsV1beta1Event.
        :type reporting_controller: str
        """

        self._reporting_controller = reporting_controller

    @property
    def reporting_instance(self) -> str:
        """Gets the reporting_instance of this IoK8sApiEventsV1beta1Event.

        ID of the controller instance, e.g. `kubelet-xyzf`.  # noqa: E501

        :return: The reporting_instance of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._reporting_instance

    @reporting_instance.setter
    def reporting_instance(self, reporting_instance: str):
        """Sets the reporting_instance of this IoK8sApiEventsV1beta1Event.

        ID of the controller instance, e.g. `kubelet-xyzf`.  # noqa: E501

        :param reporting_instance: The reporting_instance of this IoK8sApiEventsV1beta1Event.
        :type reporting_instance: str
        """

        self._reporting_instance = reporting_instance

    @property
    def series(self) -> IoK8sApiEventsV1beta1EventSeries:
        """Gets the series of this IoK8sApiEventsV1beta1Event.

        Data about the Event series this event represents or nil if it's a singleton Event.  # noqa: E501

        :return: The series of this IoK8sApiEventsV1beta1Event.
        :rtype: IoK8sApiEventsV1beta1EventSeries
        """
        return self._series

    @series.setter
    def series(self, series: IoK8sApiEventsV1beta1EventSeries):
        """Sets the series of this IoK8sApiEventsV1beta1Event.

        Data about the Event series this event represents or nil if it's a singleton Event.  # noqa: E501

        :param series: The series of this IoK8sApiEventsV1beta1Event.
        :type series: IoK8sApiEventsV1beta1EventSeries
        """

        self._series = series

    @property
    def type(self) -> str:
        """Gets the type of this IoK8sApiEventsV1beta1Event.

        Type of this event (Normal, Warning), new types could be added in the future.  # noqa: E501

        :return: The type of this IoK8sApiEventsV1beta1Event.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this IoK8sApiEventsV1beta1Event.

        Type of this event (Normal, Warning), new types could be added in the future.  # noqa: E501

        :param type: The type of this IoK8sApiEventsV1beta1Event.
        :type type: str
        """

        self._type = type
