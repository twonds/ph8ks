# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAutoscalingV2beta2ObjectMetricSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, described_object: IoK8sApiAutoscalingV2beta2CrossVersionObjectReference=None, metric: IoK8sApiAutoscalingV2beta2MetricIdentifier=None, target: IoK8sApiAutoscalingV2beta2MetricTarget=None):  # noqa: E501
        """IoK8sApiAutoscalingV2beta2ObjectMetricSource - a model defined in Swagger

        :param described_object: The described_object of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.  # noqa: E501
        :type described_object: IoK8sApiAutoscalingV2beta2CrossVersionObjectReference
        :param metric: The metric of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.  # noqa: E501
        :type metric: IoK8sApiAutoscalingV2beta2MetricIdentifier
        :param target: The target of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.  # noqa: E501
        :type target: IoK8sApiAutoscalingV2beta2MetricTarget
        """
        self.swagger_types = {
            'described_object': IoK8sApiAutoscalingV2beta2CrossVersionObjectReference,
            'metric': IoK8sApiAutoscalingV2beta2MetricIdentifier,
            'target': IoK8sApiAutoscalingV2beta2MetricTarget
        }

        self.attribute_map = {
            'described_object': 'describedObject',
            'metric': 'metric',
            'target': 'target'
        }

        self._described_object = described_object
        self._metric = metric
        self._target = target

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAutoscalingV2beta2ObjectMetricSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.autoscaling.v2beta2.ObjectMetricSource of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2beta2ObjectMetricSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def described_object(self) -> IoK8sApiAutoscalingV2beta2CrossVersionObjectReference:
        """Gets the described_object of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.


        :return: The described_object of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :rtype: IoK8sApiAutoscalingV2beta2CrossVersionObjectReference
        """
        return self._described_object

    @described_object.setter
    def described_object(self, described_object: IoK8sApiAutoscalingV2beta2CrossVersionObjectReference):
        """Sets the described_object of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.


        :param described_object: The described_object of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :type described_object: IoK8sApiAutoscalingV2beta2CrossVersionObjectReference
        """
        if described_object is None:
            raise ValueError("Invalid value for `described_object`, must not be `None`")  # noqa: E501

        self._described_object = described_object

    @property
    def metric(self) -> IoK8sApiAutoscalingV2beta2MetricIdentifier:
        """Gets the metric of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.

        metric identifies the target metric by name and selector  # noqa: E501

        :return: The metric of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :rtype: IoK8sApiAutoscalingV2beta2MetricIdentifier
        """
        return self._metric

    @metric.setter
    def metric(self, metric: IoK8sApiAutoscalingV2beta2MetricIdentifier):
        """Sets the metric of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.

        metric identifies the target metric by name and selector  # noqa: E501

        :param metric: The metric of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :type metric: IoK8sApiAutoscalingV2beta2MetricIdentifier
        """
        if metric is None:
            raise ValueError("Invalid value for `metric`, must not be `None`")  # noqa: E501

        self._metric = metric

    @property
    def target(self) -> IoK8sApiAutoscalingV2beta2MetricTarget:
        """Gets the target of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.

        target specifies the target value for the given metric  # noqa: E501

        :return: The target of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :rtype: IoK8sApiAutoscalingV2beta2MetricTarget
        """
        return self._target

    @target.setter
    def target(self, target: IoK8sApiAutoscalingV2beta2MetricTarget):
        """Sets the target of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.

        target specifies the target value for the given metric  # noqa: E501

        :param target: The target of this IoK8sApiAutoscalingV2beta2ObjectMetricSource.
        :type target: IoK8sApiAutoscalingV2beta2MetricTarget
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")  # noqa: E501

        self._target = target
