# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAuditregistrationV1alpha1Webhook(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_config: IoK8sApiAuditregistrationV1alpha1WebhookClientConfig=None, throttle: IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig=None):  # noqa: E501
        """IoK8sApiAuditregistrationV1alpha1Webhook - a model defined in Swagger

        :param client_config: The client_config of this IoK8sApiAuditregistrationV1alpha1Webhook.  # noqa: E501
        :type client_config: IoK8sApiAuditregistrationV1alpha1WebhookClientConfig
        :param throttle: The throttle of this IoK8sApiAuditregistrationV1alpha1Webhook.  # noqa: E501
        :type throttle: IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig
        """
        self.swagger_types = {
            'client_config': IoK8sApiAuditregistrationV1alpha1WebhookClientConfig,
            'throttle': IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig
        }

        self.attribute_map = {
            'client_config': 'clientConfig',
            'throttle': 'throttle'
        }

        self._client_config = client_config
        self._throttle = throttle

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAuditregistrationV1alpha1Webhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.auditregistration.v1alpha1.Webhook of this IoK8sApiAuditregistrationV1alpha1Webhook.  # noqa: E501
        :rtype: IoK8sApiAuditregistrationV1alpha1Webhook
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_config(self) -> IoK8sApiAuditregistrationV1alpha1WebhookClientConfig:
        """Gets the client_config of this IoK8sApiAuditregistrationV1alpha1Webhook.

        ClientConfig holds the connection parameters for the webhook required  # noqa: E501

        :return: The client_config of this IoK8sApiAuditregistrationV1alpha1Webhook.
        :rtype: IoK8sApiAuditregistrationV1alpha1WebhookClientConfig
        """
        return self._client_config

    @client_config.setter
    def client_config(self, client_config: IoK8sApiAuditregistrationV1alpha1WebhookClientConfig):
        """Sets the client_config of this IoK8sApiAuditregistrationV1alpha1Webhook.

        ClientConfig holds the connection parameters for the webhook required  # noqa: E501

        :param client_config: The client_config of this IoK8sApiAuditregistrationV1alpha1Webhook.
        :type client_config: IoK8sApiAuditregistrationV1alpha1WebhookClientConfig
        """
        if client_config is None:
            raise ValueError("Invalid value for `client_config`, must not be `None`")  # noqa: E501

        self._client_config = client_config

    @property
    def throttle(self) -> IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig:
        """Gets the throttle of this IoK8sApiAuditregistrationV1alpha1Webhook.

        Throttle holds the options for throttling the webhook  # noqa: E501

        :return: The throttle of this IoK8sApiAuditregistrationV1alpha1Webhook.
        :rtype: IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig
        """
        return self._throttle

    @throttle.setter
    def throttle(self, throttle: IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig):
        """Sets the throttle of this IoK8sApiAuditregistrationV1alpha1Webhook.

        Throttle holds the options for throttling the webhook  # noqa: E501

        :param throttle: The throttle of this IoK8sApiAuditregistrationV1alpha1Webhook.
        :type throttle: IoK8sApiAuditregistrationV1alpha1WebhookThrottleConfig
        """

        self._throttle = throttle
