# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAutoscalingV2beta1ResourceMetricStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, current_average_utilization: int=None, current_average_value: IoK8sApimachineryPkgApiResourceQuantity=None, name: str=None):  # noqa: E501
        """IoK8sApiAutoscalingV2beta1ResourceMetricStatus - a model defined in Swagger

        :param current_average_utilization: The current_average_utilization of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.  # noqa: E501
        :type current_average_utilization: int
        :param current_average_value: The current_average_value of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.  # noqa: E501
        :type current_average_value: IoK8sApimachineryPkgApiResourceQuantity
        :param name: The name of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'current_average_utilization': int,
            'current_average_value': IoK8sApimachineryPkgApiResourceQuantity,
            'name': str
        }

        self.attribute_map = {
            'current_average_utilization': 'currentAverageUtilization',
            'current_average_value': 'currentAverageValue',
            'name': 'name'
        }

        self._current_average_utilization = current_average_utilization
        self._current_average_value = current_average_value
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAutoscalingV2beta1ResourceMetricStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2beta1ResourceMetricStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_average_utilization(self) -> int:
        """Gets the current_average_utilization of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.  # noqa: E501

        :return: The current_average_utilization of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :rtype: int
        """
        return self._current_average_utilization

    @current_average_utilization.setter
    def current_average_utilization(self, current_average_utilization: int):
        """Sets the current_average_utilization of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.  # noqa: E501

        :param current_average_utilization: The current_average_utilization of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :type current_average_utilization: int
        """

        self._current_average_utilization = current_average_utilization

    @property
    def current_average_value(self) -> IoK8sApimachineryPkgApiResourceQuantity:
        """Gets the current_average_value of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \"pods\" metric source type. It will always be set, regardless of the corresponding metric specification.  # noqa: E501

        :return: The current_average_value of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :rtype: IoK8sApimachineryPkgApiResourceQuantity
        """
        return self._current_average_value

    @current_average_value.setter
    def current_average_value(self, current_average_value: IoK8sApimachineryPkgApiResourceQuantity):
        """Sets the current_average_value of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \"pods\" metric source type. It will always be set, regardless of the corresponding metric specification.  # noqa: E501

        :param current_average_value: The current_average_value of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :type current_average_value: IoK8sApimachineryPkgApiResourceQuantity
        """
        if current_average_value is None:
            raise ValueError("Invalid value for `current_average_value`, must not be `None`")  # noqa: E501

        self._current_average_value = current_average_value

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        name is the name of the resource in question.  # noqa: E501

        :return: The name of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.

        name is the name of the resource in question.  # noqa: E501

        :param name: The name of this IoK8sApiAutoscalingV2beta1ResourceMetricStatus.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name
