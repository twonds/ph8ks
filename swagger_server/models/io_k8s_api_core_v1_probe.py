# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1Probe(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, _exec: IoK8sApiCoreV1ExecAction=None, failure_threshold: int=None, http_get: IoK8sApiCoreV1HTTPGetAction=None, initial_delay_seconds: int=None, period_seconds: int=None, success_threshold: int=None, tcp_socket: IoK8sApiCoreV1TCPSocketAction=None, timeout_seconds: int=None):  # noqa: E501
        """IoK8sApiCoreV1Probe - a model defined in Swagger

        :param _exec: The _exec of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type _exec: IoK8sApiCoreV1ExecAction
        :param failure_threshold: The failure_threshold of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type failure_threshold: int
        :param http_get: The http_get of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type http_get: IoK8sApiCoreV1HTTPGetAction
        :param initial_delay_seconds: The initial_delay_seconds of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type initial_delay_seconds: int
        :param period_seconds: The period_seconds of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type period_seconds: int
        :param success_threshold: The success_threshold of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type success_threshold: int
        :param tcp_socket: The tcp_socket of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type tcp_socket: IoK8sApiCoreV1TCPSocketAction
        :param timeout_seconds: The timeout_seconds of this IoK8sApiCoreV1Probe.  # noqa: E501
        :type timeout_seconds: int
        """
        self.swagger_types = {
            '_exec': IoK8sApiCoreV1ExecAction,
            'failure_threshold': int,
            'http_get': IoK8sApiCoreV1HTTPGetAction,
            'initial_delay_seconds': int,
            'period_seconds': int,
            'success_threshold': int,
            'tcp_socket': IoK8sApiCoreV1TCPSocketAction,
            'timeout_seconds': int
        }

        self.attribute_map = {
            '_exec': 'exec',
            'failure_threshold': 'failureThreshold',
            'http_get': 'httpGet',
            'initial_delay_seconds': 'initialDelaySeconds',
            'period_seconds': 'periodSeconds',
            'success_threshold': 'successThreshold',
            'tcp_socket': 'tcpSocket',
            'timeout_seconds': 'timeoutSeconds'
        }

        self.__exec = _exec
        self._failure_threshold = failure_threshold
        self._http_get = http_get
        self._initial_delay_seconds = initial_delay_seconds
        self._period_seconds = period_seconds
        self._success_threshold = success_threshold
        self._tcp_socket = tcp_socket
        self._timeout_seconds = timeout_seconds

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1Probe':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.Probe of this IoK8sApiCoreV1Probe.  # noqa: E501
        :rtype: IoK8sApiCoreV1Probe
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _exec(self) -> IoK8sApiCoreV1ExecAction:
        """Gets the _exec of this IoK8sApiCoreV1Probe.

        One and only one of the following should be specified. Exec specifies the action to take.  # noqa: E501

        :return: The _exec of this IoK8sApiCoreV1Probe.
        :rtype: IoK8sApiCoreV1ExecAction
        """
        return self.__exec

    @_exec.setter
    def _exec(self, _exec: IoK8sApiCoreV1ExecAction):
        """Sets the _exec of this IoK8sApiCoreV1Probe.

        One and only one of the following should be specified. Exec specifies the action to take.  # noqa: E501

        :param _exec: The _exec of this IoK8sApiCoreV1Probe.
        :type _exec: IoK8sApiCoreV1ExecAction
        """

        self.__exec = _exec

    @property
    def failure_threshold(self) -> int:
        """Gets the failure_threshold of this IoK8sApiCoreV1Probe.

        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.  # noqa: E501

        :return: The failure_threshold of this IoK8sApiCoreV1Probe.
        :rtype: int
        """
        return self._failure_threshold

    @failure_threshold.setter
    def failure_threshold(self, failure_threshold: int):
        """Sets the failure_threshold of this IoK8sApiCoreV1Probe.

        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.  # noqa: E501

        :param failure_threshold: The failure_threshold of this IoK8sApiCoreV1Probe.
        :type failure_threshold: int
        """

        self._failure_threshold = failure_threshold

    @property
    def http_get(self) -> IoK8sApiCoreV1HTTPGetAction:
        """Gets the http_get of this IoK8sApiCoreV1Probe.

        HTTPGet specifies the http request to perform.  # noqa: E501

        :return: The http_get of this IoK8sApiCoreV1Probe.
        :rtype: IoK8sApiCoreV1HTTPGetAction
        """
        return self._http_get

    @http_get.setter
    def http_get(self, http_get: IoK8sApiCoreV1HTTPGetAction):
        """Sets the http_get of this IoK8sApiCoreV1Probe.

        HTTPGet specifies the http request to perform.  # noqa: E501

        :param http_get: The http_get of this IoK8sApiCoreV1Probe.
        :type http_get: IoK8sApiCoreV1HTTPGetAction
        """

        self._http_get = http_get

    @property
    def initial_delay_seconds(self) -> int:
        """Gets the initial_delay_seconds of this IoK8sApiCoreV1Probe.

        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :return: The initial_delay_seconds of this IoK8sApiCoreV1Probe.
        :rtype: int
        """
        return self._initial_delay_seconds

    @initial_delay_seconds.setter
    def initial_delay_seconds(self, initial_delay_seconds: int):
        """Sets the initial_delay_seconds of this IoK8sApiCoreV1Probe.

        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :param initial_delay_seconds: The initial_delay_seconds of this IoK8sApiCoreV1Probe.
        :type initial_delay_seconds: int
        """

        self._initial_delay_seconds = initial_delay_seconds

    @property
    def period_seconds(self) -> int:
        """Gets the period_seconds of this IoK8sApiCoreV1Probe.

        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.  # noqa: E501

        :return: The period_seconds of this IoK8sApiCoreV1Probe.
        :rtype: int
        """
        return self._period_seconds

    @period_seconds.setter
    def period_seconds(self, period_seconds: int):
        """Sets the period_seconds of this IoK8sApiCoreV1Probe.

        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.  # noqa: E501

        :param period_seconds: The period_seconds of this IoK8sApiCoreV1Probe.
        :type period_seconds: int
        """

        self._period_seconds = period_seconds

    @property
    def success_threshold(self) -> int:
        """Gets the success_threshold of this IoK8sApiCoreV1Probe.

        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.  # noqa: E501

        :return: The success_threshold of this IoK8sApiCoreV1Probe.
        :rtype: int
        """
        return self._success_threshold

    @success_threshold.setter
    def success_threshold(self, success_threshold: int):
        """Sets the success_threshold of this IoK8sApiCoreV1Probe.

        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.  # noqa: E501

        :param success_threshold: The success_threshold of this IoK8sApiCoreV1Probe.
        :type success_threshold: int
        """

        self._success_threshold = success_threshold

    @property
    def tcp_socket(self) -> IoK8sApiCoreV1TCPSocketAction:
        """Gets the tcp_socket of this IoK8sApiCoreV1Probe.

        TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported  # noqa: E501

        :return: The tcp_socket of this IoK8sApiCoreV1Probe.
        :rtype: IoK8sApiCoreV1TCPSocketAction
        """
        return self._tcp_socket

    @tcp_socket.setter
    def tcp_socket(self, tcp_socket: IoK8sApiCoreV1TCPSocketAction):
        """Sets the tcp_socket of this IoK8sApiCoreV1Probe.

        TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported  # noqa: E501

        :param tcp_socket: The tcp_socket of this IoK8sApiCoreV1Probe.
        :type tcp_socket: IoK8sApiCoreV1TCPSocketAction
        """

        self._tcp_socket = tcp_socket

    @property
    def timeout_seconds(self) -> int:
        """Gets the timeout_seconds of this IoK8sApiCoreV1Probe.

        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :return: The timeout_seconds of this IoK8sApiCoreV1Probe.
        :rtype: int
        """
        return self._timeout_seconds

    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds: int):
        """Sets the timeout_seconds of this IoK8sApiCoreV1Probe.

        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :param timeout_seconds: The timeout_seconds of this IoK8sApiCoreV1Probe.
        :type timeout_seconds: int
        """

        self._timeout_seconds = timeout_seconds
