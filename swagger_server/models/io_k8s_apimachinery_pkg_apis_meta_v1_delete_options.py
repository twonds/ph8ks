# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1DeleteOptions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, dry_run: List[str]=None, grace_period_seconds: int=None, kind: str=None, orphan_dependents: bool=None, preconditions: IoK8sApimachineryPkgApisMetaV1Preconditions=None, propagation_policy: str=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1DeleteOptions - a model defined in Swagger

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type api_version: str
        :param dry_run: The dry_run of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type dry_run: List[str]
        :param grace_period_seconds: The grace_period_seconds of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type grace_period_seconds: int
        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type kind: str
        :param orphan_dependents: The orphan_dependents of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type orphan_dependents: bool
        :param preconditions: The preconditions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type preconditions: IoK8sApimachineryPkgApisMetaV1Preconditions
        :param propagation_policy: The propagation_policy of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :type propagation_policy: str
        """
        self.swagger_types = {
            'api_version': str,
            'dry_run': List[str],
            'grace_period_seconds': int,
            'kind': str,
            'orphan_dependents': bool,
            'preconditions': IoK8sApimachineryPkgApisMetaV1Preconditions,
            'propagation_policy': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'dry_run': 'dryRun',
            'grace_period_seconds': 'gracePeriodSeconds',
            'kind': 'kind',
            'orphan_dependents': 'orphanDependents',
            'preconditions': 'preconditions',
            'propagation_policy': 'propagationPolicy'
        }

        self._api_version = api_version
        self._dry_run = dry_run
        self._grace_period_seconds = grace_period_seconds
        self._kind = kind
        self._orphan_dependents = orphan_dependents
        self._preconditions = preconditions
        self._propagation_policy = propagation_policy

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1DeleteOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1DeleteOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def dry_run(self) -> List[str]:
        """Gets the dry_run of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed  # noqa: E501

        :return: The dry_run of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: List[str]
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run: List[str]):
        """Sets the dry_run of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed  # noqa: E501

        :param dry_run: The dry_run of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type dry_run: List[str]
        """

        self._dry_run = dry_run

    @property
    def grace_period_seconds(self) -> int:
        """Gets the grace_period_seconds of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.  # noqa: E501

        :return: The grace_period_seconds of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: int
        """
        return self._grace_period_seconds

    @grace_period_seconds.setter
    def grace_period_seconds(self, grace_period_seconds: int):
        """Sets the grace_period_seconds of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.  # noqa: E501

        :param grace_period_seconds: The grace_period_seconds of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type grace_period_seconds: int
        """

        self._grace_period_seconds = grace_period_seconds

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type kind: str
        """

        self._kind = kind

    @property
    def orphan_dependents(self) -> bool:
        """Gets the orphan_dependents of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.  # noqa: E501

        :return: The orphan_dependents of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: bool
        """
        return self._orphan_dependents

    @orphan_dependents.setter
    def orphan_dependents(self, orphan_dependents: bool):
        """Sets the orphan_dependents of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.  # noqa: E501

        :param orphan_dependents: The orphan_dependents of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type orphan_dependents: bool
        """

        self._orphan_dependents = orphan_dependents

    @property
    def preconditions(self) -> IoK8sApimachineryPkgApisMetaV1Preconditions:
        """Gets the preconditions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.  # noqa: E501

        :return: The preconditions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: IoK8sApimachineryPkgApisMetaV1Preconditions
        """
        return self._preconditions

    @preconditions.setter
    def preconditions(self, preconditions: IoK8sApimachineryPkgApisMetaV1Preconditions):
        """Sets the preconditions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.  # noqa: E501

        :param preconditions: The preconditions of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type preconditions: IoK8sApimachineryPkgApisMetaV1Preconditions
        """

        self._preconditions = preconditions

    @property
    def propagation_policy(self) -> str:
        """Gets the propagation_policy of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.  # noqa: E501

        :return: The propagation_policy of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :rtype: str
        """
        return self._propagation_policy

    @propagation_policy.setter
    def propagation_policy(self, propagation_policy: str):
        """Sets the propagation_policy of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.

        Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.  # noqa: E501

        :param propagation_policy: The propagation_policy of this IoK8sApimachineryPkgApisMetaV1DeleteOptions.
        :type propagation_policy: str
        """

        self._propagation_policy = propagation_policy
