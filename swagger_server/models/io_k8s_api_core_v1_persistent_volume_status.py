# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1PersistentVolumeStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, phase: str=None, reason: str=None):  # noqa: E501
        """IoK8sApiCoreV1PersistentVolumeStatus - a model defined in Swagger

        :param message: The message of this IoK8sApiCoreV1PersistentVolumeStatus.  # noqa: E501
        :type message: str
        :param phase: The phase of this IoK8sApiCoreV1PersistentVolumeStatus.  # noqa: E501
        :type phase: str
        :param reason: The reason of this IoK8sApiCoreV1PersistentVolumeStatus.  # noqa: E501
        :type reason: str
        """
        self.swagger_types = {
            'message': str,
            'phase': str,
            'reason': str
        }

        self.attribute_map = {
            'message': 'message',
            'phase': 'phase',
            'reason': 'reason'
        }

        self._message = message
        self._phase = phase
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1PersistentVolumeStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.PersistentVolumeStatus of this IoK8sApiCoreV1PersistentVolumeStatus.  # noqa: E501
        :rtype: IoK8sApiCoreV1PersistentVolumeStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> str:
        """Gets the message of this IoK8sApiCoreV1PersistentVolumeStatus.

        A human-readable message indicating details about why the volume is in this state.  # noqa: E501

        :return: The message of this IoK8sApiCoreV1PersistentVolumeStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this IoK8sApiCoreV1PersistentVolumeStatus.

        A human-readable message indicating details about why the volume is in this state.  # noqa: E501

        :param message: The message of this IoK8sApiCoreV1PersistentVolumeStatus.
        :type message: str
        """

        self._message = message

    @property
    def phase(self) -> str:
        """Gets the phase of this IoK8sApiCoreV1PersistentVolumeStatus.

        Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase  # noqa: E501

        :return: The phase of this IoK8sApiCoreV1PersistentVolumeStatus.
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase: str):
        """Sets the phase of this IoK8sApiCoreV1PersistentVolumeStatus.

        Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase  # noqa: E501

        :param phase: The phase of this IoK8sApiCoreV1PersistentVolumeStatus.
        :type phase: str
        """

        self._phase = phase

    @property
    def reason(self) -> str:
        """Gets the reason of this IoK8sApiCoreV1PersistentVolumeStatus.

        Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.  # noqa: E501

        :return: The reason of this IoK8sApiCoreV1PersistentVolumeStatus.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this IoK8sApiCoreV1PersistentVolumeStatus.

        Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.  # noqa: E501

        :param reason: The reason of this IoK8sApiCoreV1PersistentVolumeStatus.
        :type reason: str
        """

        self._reason = reason
