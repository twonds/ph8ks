# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiAuthenticationV1TokenRequestStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, expiration_timestamp: IoK8sApimachineryPkgApisMetaV1Time=None, token: str=None):  # noqa: E501
        """IoK8sApiAuthenticationV1TokenRequestStatus - a model defined in Swagger

        :param expiration_timestamp: The expiration_timestamp of this IoK8sApiAuthenticationV1TokenRequestStatus.  # noqa: E501
        :type expiration_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        :param token: The token of this IoK8sApiAuthenticationV1TokenRequestStatus.  # noqa: E501
        :type token: str
        """
        self.swagger_types = {
            'expiration_timestamp': IoK8sApimachineryPkgApisMetaV1Time,
            'token': str
        }

        self.attribute_map = {
            'expiration_timestamp': 'expirationTimestamp',
            'token': 'token'
        }

        self._expiration_timestamp = expiration_timestamp
        self._token = token

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiAuthenticationV1TokenRequestStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.authentication.v1.TokenRequestStatus of this IoK8sApiAuthenticationV1TokenRequestStatus.  # noqa: E501
        :rtype: IoK8sApiAuthenticationV1TokenRequestStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_timestamp(self) -> IoK8sApimachineryPkgApisMetaV1Time:
        """Gets the expiration_timestamp of this IoK8sApiAuthenticationV1TokenRequestStatus.

        ExpirationTimestamp is the time of expiration of the returned token.  # noqa: E501

        :return: The expiration_timestamp of this IoK8sApiAuthenticationV1TokenRequestStatus.
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._expiration_timestamp

    @expiration_timestamp.setter
    def expiration_timestamp(self, expiration_timestamp: IoK8sApimachineryPkgApisMetaV1Time):
        """Sets the expiration_timestamp of this IoK8sApiAuthenticationV1TokenRequestStatus.

        ExpirationTimestamp is the time of expiration of the returned token.  # noqa: E501

        :param expiration_timestamp: The expiration_timestamp of this IoK8sApiAuthenticationV1TokenRequestStatus.
        :type expiration_timestamp: IoK8sApimachineryPkgApisMetaV1Time
        """
        if expiration_timestamp is None:
            raise ValueError("Invalid value for `expiration_timestamp`, must not be `None`")  # noqa: E501

        self._expiration_timestamp = expiration_timestamp

    @property
    def token(self) -> str:
        """Gets the token of this IoK8sApiAuthenticationV1TokenRequestStatus.

        Token is the opaque bearer token.  # noqa: E501

        :return: The token of this IoK8sApiAuthenticationV1TokenRequestStatus.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this IoK8sApiAuthenticationV1TokenRequestStatus.

        Token is the opaque bearer token.  # noqa: E501

        :param token: The token of this IoK8sApiAuthenticationV1TokenRequestStatus.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")  # noqa: E501

        self._token = token
