# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, fs_type: str=None, partition: int=None, read_only: bool=None, volume_id: str=None):  # noqa: E501
        """IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource - a model defined in Swagger

        :param fs_type: The fs_type of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.  # noqa: E501
        :type fs_type: str
        :param partition: The partition of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.  # noqa: E501
        :type partition: int
        :param read_only: The read_only of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.  # noqa: E501
        :type read_only: bool
        :param volume_id: The volume_id of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.  # noqa: E501
        :type volume_id: str
        """
        self.swagger_types = {
            'fs_type': str,
            'partition': int,
            'read_only': bool,
            'volume_id': str
        }

        self.attribute_map = {
            'fs_type': 'fsType',
            'partition': 'partition',
            'read_only': 'readOnly',
            'volume_id': 'volumeID'
        }

        self._fs_type = fs_type
        self._partition = partition
        self._read_only = read_only
        self._volume_id = volume_id

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.  # noqa: E501
        :rtype: IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fs_type(self) -> str:
        """Gets the fs_type of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :return: The fs_type of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :rtype: str
        """
        return self._fs_type

    @fs_type.setter
    def fs_type(self, fs_type: str):
        """Sets the fs_type of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :param fs_type: The fs_type of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :type fs_type: str
        """

        self._fs_type = fs_type

    @property
    def partition(self) -> int:
        """Gets the partition of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).  # noqa: E501

        :return: The partition of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :rtype: int
        """
        return self._partition

    @partition.setter
    def partition(self, partition: int):
        """Sets the partition of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).  # noqa: E501

        :param partition: The partition of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :type partition: int
        """

        self._partition = partition

    @property
    def read_only(self) -> bool:
        """Gets the read_only of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :return: The read_only of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only: bool):
        """Sets the read_only of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :param read_only: The read_only of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def volume_id(self) -> str:
        """Gets the volume_id of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :return: The volume_id of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id: str):
        """Sets the volume_id of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.

        Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  # noqa: E501

        :param volume_id: The volume_id of this IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource.
        :type volume_id: str
        """
        if volume_id is None:
            raise ValueError("Invalid value for `volume_id`, must not be `None`")  # noqa: E501

        self._volume_id = volume_id
