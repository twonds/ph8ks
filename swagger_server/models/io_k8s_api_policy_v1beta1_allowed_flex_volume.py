# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApiPolicyV1beta1AllowedFlexVolume(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, driver: str=None):  # noqa: E501
        """IoK8sApiPolicyV1beta1AllowedFlexVolume - a model defined in Swagger

        :param driver: The driver of this IoK8sApiPolicyV1beta1AllowedFlexVolume.  # noqa: E501
        :type driver: str
        """
        self.swagger_types = {
            'driver': str
        }

        self.attribute_map = {
            'driver': 'driver'
        }

        self._driver = driver

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApiPolicyV1beta1AllowedFlexVolume':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.api.policy.v1beta1.AllowedFlexVolume of this IoK8sApiPolicyV1beta1AllowedFlexVolume.  # noqa: E501
        :rtype: IoK8sApiPolicyV1beta1AllowedFlexVolume
        """
        return util.deserialize_model(dikt, cls)

    @property
    def driver(self) -> str:
        """Gets the driver of this IoK8sApiPolicyV1beta1AllowedFlexVolume.

        driver is the name of the Flexvolume driver.  # noqa: E501

        :return: The driver of this IoK8sApiPolicyV1beta1AllowedFlexVolume.
        :rtype: str
        """
        return self._driver

    @driver.setter
    def driver(self, driver: str):
        """Sets the driver of this IoK8sApiPolicyV1beta1AllowedFlexVolume.

        driver is the name of the Flexvolume driver.  # noqa: E501

        :param driver: The driver of this IoK8sApiPolicyV1beta1AllowedFlexVolume.
        :type driver: str
        """
        if driver is None:
            raise ValueError("Invalid value for `driver`, must not be `None`")  # noqa: E501

        self._driver = driver
