# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1StatusDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, causes: List[IoK8sApimachineryPkgApisMetaV1StatusCause]=None, group: str=None, kind: str=None, name: str=None, retry_after_seconds: int=None, uid: str=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1StatusDetails - a model defined in Swagger

        :param causes: The causes of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type causes: List[IoK8sApimachineryPkgApisMetaV1StatusCause]
        :param group: The group of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type group: str
        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type kind: str
        :param name: The name of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type name: str
        :param retry_after_seconds: The retry_after_seconds of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type retry_after_seconds: int
        :param uid: The uid of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :type uid: str
        """
        self.swagger_types = {
            'causes': List[IoK8sApimachineryPkgApisMetaV1StatusCause],
            'group': str,
            'kind': str,
            'name': str,
            'retry_after_seconds': int,
            'uid': str
        }

        self.attribute_map = {
            'causes': 'causes',
            'group': 'group',
            'kind': 'kind',
            'name': 'name',
            'retry_after_seconds': 'retryAfterSeconds',
            'uid': 'uid'
        }

        self._causes = causes
        self._group = group
        self._kind = kind
        self._name = name
        self._retry_after_seconds = retry_after_seconds
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1StatusDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails of this IoK8sApimachineryPkgApisMetaV1StatusDetails.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1StatusDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def causes(self) -> List[IoK8sApimachineryPkgApisMetaV1StatusCause]:
        """Gets the causes of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.  # noqa: E501

        :return: The causes of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: List[IoK8sApimachineryPkgApisMetaV1StatusCause]
        """
        return self._causes

    @causes.setter
    def causes(self, causes: List[IoK8sApimachineryPkgApisMetaV1StatusCause]):
        """Sets the causes of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.  # noqa: E501

        :param causes: The causes of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type causes: List[IoK8sApimachineryPkgApisMetaV1StatusCause]
        """

        self._causes = causes

    @property
    def group(self) -> str:
        """Gets the group of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The group attribute of the resource associated with the status StatusReason.  # noqa: E501

        :return: The group of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group: str):
        """Sets the group of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The group attribute of the resource associated with the status StatusReason.  # noqa: E501

        :param group: The group of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type group: str
        """

        self._group = group

    @property
    def kind(self) -> str:
        """Gets the kind of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self) -> str:
        """Gets the name of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).  # noqa: E501

        :return: The name of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).  # noqa: E501

        :param name: The name of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type name: str
        """

        self._name = name

    @property
    def retry_after_seconds(self) -> int:
        """Gets the retry_after_seconds of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.  # noqa: E501

        :return: The retry_after_seconds of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: int
        """
        return self._retry_after_seconds

    @retry_after_seconds.setter
    def retry_after_seconds(self, retry_after_seconds: int):
        """Sets the retry_after_seconds of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.  # noqa: E501

        :param retry_after_seconds: The retry_after_seconds of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type retry_after_seconds: int
        """

        self._retry_after_seconds = retry_after_seconds

    @property
    def uid(self) -> str:
        """Gets the uid of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids  # noqa: E501

        :return: The uid of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this IoK8sApimachineryPkgApisMetaV1StatusDetails.

        UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids  # noqa: E501

        :param uid: The uid of this IoK8sApimachineryPkgApisMetaV1StatusDetails.
        :type uid: str
        """

        self._uid = uid
