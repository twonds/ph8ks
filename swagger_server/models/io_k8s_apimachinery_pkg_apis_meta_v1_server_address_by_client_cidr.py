# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_cidr: str=None, server_address: str=None):  # noqa: E501
        """IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR - a model defined in Swagger

        :param client_cidr: The client_cidr of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.  # noqa: E501
        :type client_cidr: str
        :param server_address: The server_address of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.  # noqa: E501
        :type server_address: str
        """
        self.swagger_types = {
            'client_cidr': str,
            'server_address': str
        }

        self.attribute_map = {
            'client_cidr': 'clientCIDR',
            'server_address': 'serverAddress'
        }

        self._client_cidr = client_cidr
        self._server_address = server_address

    @classmethod
    def from_dict(cls, dikt) -> 'IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_cidr(self) -> str:
        """Gets the client_cidr of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.

        The CIDR with which clients can match their IP to figure out the server address that they should use.  # noqa: E501

        :return: The client_cidr of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.
        :rtype: str
        """
        return self._client_cidr

    @client_cidr.setter
    def client_cidr(self, client_cidr: str):
        """Sets the client_cidr of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.

        The CIDR with which clients can match their IP to figure out the server address that they should use.  # noqa: E501

        :param client_cidr: The client_cidr of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.
        :type client_cidr: str
        """
        if client_cidr is None:
            raise ValueError("Invalid value for `client_cidr`, must not be `None`")  # noqa: E501

        self._client_cidr = client_cidr

    @property
    def server_address(self) -> str:
        """Gets the server_address of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.

        Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.  # noqa: E501

        :return: The server_address of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.
        :rtype: str
        """
        return self._server_address

    @server_address.setter
    def server_address(self, server_address: str):
        """Sets the server_address of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.

        Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.  # noqa: E501

        :param server_address: The server_address of this IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.
        :type server_address: str
        """
        if server_address is None:
            raise ValueError("Invalid value for `server_address`, must not be `None`")  # noqa: E501

        self._server_address = server_address
